### YamlMime:ManagedReference
items:
- uid: RedLight.Graphics.Mesh
  commentId: T:RedLight.Graphics.Mesh
  id: Mesh
  parent: RedLight.Graphics
  children:
  - RedLight.Graphics.Mesh.#ctor(RedLight.Graphics.RLGraphics,System.Collections.Generic.List{RedLight.Graphics.Vertex},System.UInt32[])
  - RedLight.Graphics.Mesh.AttachShader(RedLight.Graphics.RLShader,RedLight.Graphics.RLShader)
  - RedLight.Graphics.Mesh.AttachTexture(RedLight.Graphics.RLTexture)
  - RedLight.Graphics.Mesh.AttachTexture(System.Collections.Generic.List{RedLight.Graphics.RLTexture})
  - RedLight.Graphics.Mesh.Draw
  - RedLight.Graphics.Mesh.IndicesCount
  - RedLight.Graphics.Mesh.MakeTransformable
  - RedLight.Graphics.Mesh.Name
  - RedLight.Graphics.Mesh.Transform
  - RedLight.Graphics.Mesh.Vertices
  - RedLight.Graphics.Mesh.program
  - RedLight.Graphics.Mesh.vao
  langs:
  - csharp
  - vb
  name: Mesh
  nameWithType: Mesh
  fullName: RedLight.Graphics.Mesh
  type: Class
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Mesh
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 23
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public class Mesh
    content.vb: Public Class Mesh
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RedLight.Graphics.Mesh.vao
  commentId: F:RedLight.Graphics.Mesh.vao
  id: vao
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: vao
  nameWithType: Mesh.vao
  fullName: RedLight.Graphics.Mesh.vao
  type: Field
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: vao
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 25
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public uint vao
    return:
      type: System.UInt32
    content.vb: Public vao As UInteger
- uid: RedLight.Graphics.Mesh.program
  commentId: F:RedLight.Graphics.Mesh.program
  id: program
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: program
  nameWithType: Mesh.program
  fullName: RedLight.Graphics.Mesh.program
  type: Field
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: program
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 28
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public uint program
    return:
      type: System.UInt32
    content.vb: Public program As UInteger
- uid: RedLight.Graphics.Mesh.Vertices
  commentId: P:RedLight.Graphics.Mesh.Vertices
  id: Vertices
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: Vertices
  nameWithType: Mesh.Vertices
  fullName: RedLight.Graphics.Mesh.Vertices
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Vertices
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 29
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public List<Vertex> Vertices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RedLight.Graphics.Vertex}
    content.vb: Public Property Vertices As List(Of Vertex)
  overload: RedLight.Graphics.Mesh.Vertices*
- uid: RedLight.Graphics.Mesh.Transform
  commentId: P:RedLight.Graphics.Mesh.Transform
  id: Transform
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: Transform
  nameWithType: Mesh.Transform
  fullName: RedLight.Graphics.Mesh.Transform
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Transform
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 34
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Matrix4x4 Transform { get; set; }
    parameters: []
    return:
      type: System.Numerics.Matrix4x4
    content.vb: Public Property Transform As Matrix4x4
  overload: RedLight.Graphics.Mesh.Transform*
- uid: RedLight.Graphics.Mesh.Name
  commentId: P:RedLight.Graphics.Mesh.Name
  id: Name
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Mesh.Name
  fullName: RedLight.Graphics.Mesh.Name
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Name
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 36
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RedLight.Graphics.Mesh.Name*
- uid: RedLight.Graphics.Mesh.#ctor(RedLight.Graphics.RLGraphics,System.Collections.Generic.List{RedLight.Graphics.Vertex},System.UInt32[])
  commentId: M:RedLight.Graphics.Mesh.#ctor(RedLight.Graphics.RLGraphics,System.Collections.Generic.List{RedLight.Graphics.Vertex},System.UInt32[])
  id: '#ctor(RedLight.Graphics.RLGraphics,System.Collections.Generic.List{RedLight.Graphics.Vertex},System.UInt32[])'
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: Mesh(RLGraphics, List<Vertex>, uint[])
  nameWithType: Mesh.Mesh(RLGraphics, List<Vertex>, uint[])
  fullName: RedLight.Graphics.Mesh.Mesh(RedLight.Graphics.RLGraphics, System.Collections.Generic.List<RedLight.Graphics.Vertex>, uint[])
  type: Constructor
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 38
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Mesh(RLGraphics graphics, List<Vertex> vertices, uint[] indices)
    parameters:
    - id: graphics
      type: RedLight.Graphics.RLGraphics
    - id: vertices
      type: System.Collections.Generic.List{RedLight.Graphics.Vertex}
    - id: indices
      type: System.UInt32[]
    content.vb: Public Sub New(graphics As RLGraphics, vertices As List(Of Vertex), indices As UInteger())
  overload: RedLight.Graphics.Mesh.#ctor*
  nameWithType.vb: Mesh.New(RLGraphics, List(Of Vertex), UInteger())
  fullName.vb: RedLight.Graphics.Mesh.New(RedLight.Graphics.RLGraphics, System.Collections.Generic.List(Of RedLight.Graphics.Vertex), UInteger())
  name.vb: New(RLGraphics, List(Of Vertex), UInteger())
- uid: RedLight.Graphics.Mesh.AttachShader(RedLight.Graphics.RLShader,RedLight.Graphics.RLShader)
  commentId: M:RedLight.Graphics.Mesh.AttachShader(RedLight.Graphics.RLShader,RedLight.Graphics.RLShader)
  id: AttachShader(RedLight.Graphics.RLShader,RedLight.Graphics.RLShader)
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: AttachShader(RLShader, RLShader)
  nameWithType: Mesh.AttachShader(RLShader, RLShader)
  fullName: RedLight.Graphics.Mesh.AttachShader(RedLight.Graphics.RLShader, RedLight.Graphics.RLShader)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachShader
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 95
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Attaches a shader to a mesh
  example: []
  syntax:
    content: public Mesh AttachShader(RLShader vertexShader, RLShader fragmentShader)
    parameters:
    - id: vertexShader
      type: RedLight.Graphics.RLShader
      description: RLShader
    - id: fragmentShader
      type: RedLight.Graphics.RLShader
      description: RLShader
    return:
      type: RedLight.Graphics.Mesh
      description: ''
    content.vb: Public Function AttachShader(vertexShader As RLShader, fragmentShader As RLShader) As Mesh
  overload: RedLight.Graphics.Mesh.AttachShader*
- uid: RedLight.Graphics.Mesh.AttachTexture(RedLight.Graphics.RLTexture)
  commentId: M:RedLight.Graphics.Mesh.AttachTexture(RedLight.Graphics.RLTexture)
  id: AttachTexture(RedLight.Graphics.RLTexture)
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: AttachTexture(RLTexture)
  nameWithType: Mesh.AttachTexture(RLTexture)
  fullName: RedLight.Graphics.Mesh.AttachTexture(RedLight.Graphics.RLTexture)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachTexture
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 133
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Attaches a texture to a mesh
  example: []
  syntax:
    content: public Mesh AttachTexture(RLTexture texture)
    parameters:
    - id: texture
      type: RedLight.Graphics.RLTexture
      description: RLTexture
    return:
      type: RedLight.Graphics.Mesh
      description: ''
    content.vb: Public Function AttachTexture(texture As RLTexture) As Mesh
  overload: RedLight.Graphics.Mesh.AttachTexture*
- uid: RedLight.Graphics.Mesh.AttachTexture(System.Collections.Generic.List{RedLight.Graphics.RLTexture})
  commentId: M:RedLight.Graphics.Mesh.AttachTexture(System.Collections.Generic.List{RedLight.Graphics.RLTexture})
  id: AttachTexture(System.Collections.Generic.List{RedLight.Graphics.RLTexture})
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: AttachTexture(List<RLTexture>)
  nameWithType: Mesh.AttachTexture(List<RLTexture>)
  fullName: RedLight.Graphics.Mesh.AttachTexture(System.Collections.Generic.List<RedLight.Graphics.RLTexture>)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachTexture
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 139
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Mesh AttachTexture(List<RLTexture> textureList)
    parameters:
    - id: textureList
      type: System.Collections.Generic.List{RedLight.Graphics.RLTexture}
    return:
      type: RedLight.Graphics.Mesh
    content.vb: Public Function AttachTexture(textureList As List(Of RLTexture)) As Mesh
  overload: RedLight.Graphics.Mesh.AttachTexture*
  nameWithType.vb: Mesh.AttachTexture(List(Of RLTexture))
  fullName.vb: RedLight.Graphics.Mesh.AttachTexture(System.Collections.Generic.List(Of RedLight.Graphics.RLTexture))
  name.vb: AttachTexture(List(Of RLTexture))
- uid: RedLight.Graphics.Mesh.MakeTransformable
  commentId: M:RedLight.Graphics.Mesh.MakeTransformable
  id: MakeTransformable
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: MakeTransformable()
  nameWithType: Mesh.MakeTransformable()
  fullName: RedLight.Graphics.Mesh.MakeTransformable()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: MakeTransformable
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 145
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Transformable<Mesh> MakeTransformable()
    return:
      type: RedLight.Graphics.Transformable{RedLight.Graphics.Mesh}
    content.vb: Public Function MakeTransformable() As Transformable(Of Mesh)
  overload: RedLight.Graphics.Mesh.MakeTransformable*
- uid: RedLight.Graphics.Mesh.Draw
  commentId: M:RedLight.Graphics.Mesh.Draw
  id: Draw
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: Mesh.Draw()
  fullName: RedLight.Graphics.Mesh.Draw()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Draw
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 151
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: RedLight.Graphics.Mesh.Draw*
- uid: RedLight.Graphics.Mesh.IndicesCount
  commentId: P:RedLight.Graphics.Mesh.IndicesCount
  id: IndicesCount
  parent: RedLight.Graphics.Mesh
  langs:
  - csharp
  - vb
  name: IndicesCount
  nameWithType: Mesh.IndicesCount
  fullName: RedLight.Graphics.Mesh.IndicesCount
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Mesh.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: IndicesCount
    path: src/RedLight/Graphics/Mesh.cs
    startLine: 197
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public int IndicesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property IndicesCount As Integer
  overload: RedLight.Graphics.Mesh.IndicesCount*
references:
- uid: RedLight.Graphics
  commentId: N:RedLight.Graphics
  href: RedLight.html
  name: RedLight.Graphics
  nameWithType: RedLight.Graphics
  fullName: RedLight.Graphics
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: RedLight.Graphics.Mesh.Vertices*
  commentId: Overload:RedLight.Graphics.Mesh.Vertices
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_Vertices
  name: Vertices
  nameWithType: Mesh.Vertices
  fullName: RedLight.Graphics.Mesh.Vertices
- uid: System.Collections.Generic.List{RedLight.Graphics.Vertex}
  commentId: T:System.Collections.Generic.List{RedLight.Graphics.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vertex>
  nameWithType: List<Vertex>
  fullName: System.Collections.Generic.List<RedLight.Graphics.Vertex>
  nameWithType.vb: List(Of Vertex)
  fullName.vb: System.Collections.Generic.List(Of RedLight.Graphics.Vertex)
  name.vb: List(Of Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RedLight.Graphics.Vertex
    name: Vertex
    href: RedLight.Graphics.Vertex.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RedLight.Graphics.Vertex
    name: Vertex
    href: RedLight.Graphics.Vertex.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RedLight.Graphics.Mesh.Transform*
  commentId: Overload:RedLight.Graphics.Mesh.Transform
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_Transform
  name: Transform
  nameWithType: Mesh.Transform
  fullName: RedLight.Graphics.Mesh.Transform
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: RedLight.Graphics.Mesh.Name*
  commentId: Overload:RedLight.Graphics.Mesh.Name
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_Name
  name: Name
  nameWithType: Mesh.Name
  fullName: RedLight.Graphics.Mesh.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RedLight.Graphics.Mesh.#ctor*
  commentId: Overload:RedLight.Graphics.Mesh.#ctor
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh__ctor_RedLight_Graphics_RLGraphics_System_Collections_Generic_List_RedLight_Graphics_Vertex__System_UInt32___
  name: Mesh
  nameWithType: Mesh.Mesh
  fullName: RedLight.Graphics.Mesh.Mesh
  nameWithType.vb: Mesh.New
  fullName.vb: RedLight.Graphics.Mesh.New
  name.vb: New
- uid: RedLight.Graphics.RLGraphics
  commentId: T:RedLight.Graphics.RLGraphics
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLGraphics.html
  name: RLGraphics
  nameWithType: RLGraphics
  fullName: RedLight.Graphics.RLGraphics
- uid: System.UInt32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint[]
  nameWithType: uint[]
  fullName: uint[]
  nameWithType.vb: UInteger()
  fullName.vb: UInteger()
  name.vb: UInteger()
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: (
  - name: )
- uid: RedLight.Graphics.Mesh.AttachShader*
  commentId: Overload:RedLight.Graphics.Mesh.AttachShader
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_AttachShader_RedLight_Graphics_RLShader_RedLight_Graphics_RLShader_
  name: AttachShader
  nameWithType: Mesh.AttachShader
  fullName: RedLight.Graphics.Mesh.AttachShader
- uid: RedLight.Graphics.RLShader
  commentId: T:RedLight.Graphics.RLShader
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLShader.html
  name: RLShader
  nameWithType: RLShader
  fullName: RedLight.Graphics.RLShader
- uid: RedLight.Graphics.Mesh
  commentId: T:RedLight.Graphics.Mesh
  parent: RedLight.Graphics
  href: RedLight.Graphics.Mesh.html
  name: Mesh
  nameWithType: Mesh
  fullName: RedLight.Graphics.Mesh
- uid: RedLight.Graphics.Mesh.AttachTexture*
  commentId: Overload:RedLight.Graphics.Mesh.AttachTexture
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_AttachTexture_RedLight_Graphics_RLTexture_
  name: AttachTexture
  nameWithType: Mesh.AttachTexture
  fullName: RedLight.Graphics.Mesh.AttachTexture
- uid: RedLight.Graphics.RLTexture
  commentId: T:RedLight.Graphics.RLTexture
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLTexture.html
  name: RLTexture
  nameWithType: RLTexture
  fullName: RedLight.Graphics.RLTexture
- uid: System.Collections.Generic.List{RedLight.Graphics.RLTexture}
  commentId: T:System.Collections.Generic.List{RedLight.Graphics.RLTexture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RLTexture>
  nameWithType: List<RLTexture>
  fullName: System.Collections.Generic.List<RedLight.Graphics.RLTexture>
  nameWithType.vb: List(Of RLTexture)
  fullName.vb: System.Collections.Generic.List(Of RedLight.Graphics.RLTexture)
  name.vb: List(Of RLTexture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RedLight.Graphics.RLTexture
    name: RLTexture
    href: RedLight.Graphics.RLTexture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RedLight.Graphics.RLTexture
    name: RLTexture
    href: RedLight.Graphics.RLTexture.html
  - name: )
- uid: RedLight.Graphics.Mesh.MakeTransformable*
  commentId: Overload:RedLight.Graphics.Mesh.MakeTransformable
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_MakeTransformable
  name: MakeTransformable
  nameWithType: Mesh.MakeTransformable
  fullName: RedLight.Graphics.Mesh.MakeTransformable
- uid: RedLight.Graphics.Transformable{RedLight.Graphics.Mesh}
  commentId: T:RedLight.Graphics.Transformable{RedLight.Graphics.Mesh}
  parent: RedLight.Graphics
  definition: RedLight.Graphics.Transformable`1
  href: RedLight.Graphics.Transformable-1.html
  name: Transformable<Mesh>
  nameWithType: Transformable<Mesh>
  fullName: RedLight.Graphics.Transformable<RedLight.Graphics.Mesh>
  nameWithType.vb: Transformable(Of Mesh)
  fullName.vb: RedLight.Graphics.Transformable(Of RedLight.Graphics.Mesh)
  name.vb: Transformable(Of Mesh)
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: <
  - uid: RedLight.Graphics.Mesh
    name: Mesh
    href: RedLight.Graphics.Mesh.html
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: RedLight.Graphics.Mesh
    name: Mesh
    href: RedLight.Graphics.Mesh.html
  - name: )
- uid: RedLight.Graphics.Transformable`1
  commentId: T:RedLight.Graphics.Transformable`1
  parent: RedLight.Graphics
  href: RedLight.Graphics.Transformable-1.html
  name: Transformable<T>
  nameWithType: Transformable<T>
  fullName: RedLight.Graphics.Transformable<T>
  nameWithType.vb: Transformable(Of T)
  fullName.vb: RedLight.Graphics.Transformable(Of T)
  name.vb: Transformable(Of T)
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RedLight.Graphics.Mesh.Draw*
  commentId: Overload:RedLight.Graphics.Mesh.Draw
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_Draw
  name: Draw
  nameWithType: Mesh.Draw
  fullName: RedLight.Graphics.Mesh.Draw
- uid: RedLight.Graphics.Mesh.IndicesCount*
  commentId: Overload:RedLight.Graphics.Mesh.IndicesCount
  href: RedLight.Graphics.Mesh.html#RedLight_Graphics_Mesh_IndicesCount
  name: IndicesCount
  nameWithType: Mesh.IndicesCount
  fullName: RedLight.Graphics.Mesh.IndicesCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
