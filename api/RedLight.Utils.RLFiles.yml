### YamlMime:ManagedReference
items:
- uid: RedLight.Utils.RLFiles
  commentId: T:RedLight.Utils.RLFiles
  id: RLFiles
  parent: RedLight.Utils
  children:
  - RedLight.Utils.RLFiles.GetResourceAsString(System.String)
  - RedLight.Utils.RLFiles.GetResourcePath(System.String)
  langs:
  - csharp
  - vb
  name: RLFiles
  nameWithType: RLFiles
  fullName: RedLight.Utils.RLFiles
  type: Class
  source:
    remote:
      path: src/RedLight/Utils/RLFiles.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: RLFiles
    path: src/RedLight/Utils/RLFiles.cs
    startLine: 8
  assemblies:
  - RedLight
  namespace: RedLight.Utils
  syntax:
    content: public static class RLFiles
    content.vb: Public Module RLFiles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RedLight.Utils.RLFiles.GetResourcePath(System.String)
  commentId: M:RedLight.Utils.RLFiles.GetResourcePath(System.String)
  id: GetResourcePath(System.String)
  parent: RedLight.Utils.RLFiles
  langs:
  - csharp
  - vb
  name: GetResourcePath(string)
  nameWithType: RLFiles.GetResourcePath(string)
  fullName: RedLight.Utils.RLFiles.GetResourcePath(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Utils/RLFiles.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: GetResourcePath
    path: src/RedLight/Utils/RLFiles.cs
    startLine: 21
  assemblies:
  - RedLight
  namespace: RedLight.Utils
  summary: >-
    This function gets the relative path from the resource name. It takes an input

    of resourceName, formatted like "RedLight.Resources.Models.Maxwell.maxwell_the_cat.glb". The function will

    then search through the Resources folder to get to {AssemblyExecutionLocation}/Resources/Models/maxwell_the_cat.glb.


    It will then return the path of that resource, which can be used for other functions to load textures or models or more.
  example: []
  syntax:
    content: public static string GetResourcePath(string resourceName)
    parameters:
    - id: resourceName
      type: System.String
      description: <xref href="System.String" data-throw-if-not-resolved="false"></xref> The name of the resource
    return:
      type: System.String
      description: <xref href="System.String" data-throw-if-not-resolved="false"></xref> The location of the resource
    content.vb: Public Shared Function GetResourcePath(resourceName As String) As String
  overload: RedLight.Utils.RLFiles.GetResourcePath*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: ''
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: RLFiles.GetResourcePath(String)
  fullName.vb: RedLight.Utils.RLFiles.GetResourcePath(String)
  name.vb: GetResourcePath(String)
- uid: RedLight.Utils.RLFiles.GetResourceAsString(System.String)
  commentId: M:RedLight.Utils.RLFiles.GetResourceAsString(System.String)
  id: GetResourceAsString(System.String)
  parent: RedLight.Utils.RLFiles
  langs:
  - csharp
  - vb
  name: GetResourceAsString(string)
  nameWithType: RLFiles.GetResourceAsString(string)
  fullName: RedLight.Utils.RLFiles.GetResourceAsString(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Utils/RLFiles.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: GetResourceAsString
    path: src/RedLight/Utils/RLFiles.cs
    startLine: 84
  assemblies:
  - RedLight
  namespace: RedLight.Utils
  summary: >-
    This scene fetches the resource as per its resource name. This function is typically used for shaders

    to compile them, however they can be used however they like. 


    The resource name parameter is expected to be of the type "RedLight.Resources.Shaders.basic.vert", where the 

    function will travel to {AssemblyExecutionLocation}/Resources/Shaders/basic.vert.
  example: []
  syntax:
    content: public static string GetResourceAsString(string resourceName)
    parameters:
    - id: resourceName
      type: System.String
      description: <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.String
      description: <xref href="System.String" data-throw-if-not-resolved="false"></xref> The file as a string
    content.vb: Public Shared Function GetResourceAsString(resourceName As String) As String
  overload: RedLight.Utils.RLFiles.GetResourceAsString*
  nameWithType.vb: RLFiles.GetResourceAsString(String)
  fullName.vb: RedLight.Utils.RLFiles.GetResourceAsString(String)
  name.vb: GetResourceAsString(String)
references:
- uid: RedLight.Utils
  commentId: N:RedLight.Utils
  href: RedLight.html
  name: RedLight.Utils
  nameWithType: RedLight.Utils
  fullName: RedLight.Utils
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Utils
    name: Utils
    href: RedLight.Utils.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Utils
    name: Utils
    href: RedLight.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: RedLight.Utils.RLFiles.GetResourcePath*
  commentId: Overload:RedLight.Utils.RLFiles.GetResourcePath
  href: RedLight.Utils.RLFiles.html#RedLight_Utils_RLFiles_GetResourcePath_System_String_
  name: GetResourcePath
  nameWithType: RLFiles.GetResourcePath
  fullName: RedLight.Utils.RLFiles.GetResourcePath
- uid: RedLight.Utils.RLFiles.GetResourceAsString*
  commentId: Overload:RedLight.Utils.RLFiles.GetResourceAsString
  href: RedLight.Utils.RLFiles.html#RedLight_Utils_RLFiles_GetResourceAsString_System_String_
  name: GetResourceAsString
  nameWithType: RLFiles.GetResourceAsString
  fullName: RedLight.Utils.RLFiles.GetResourceAsString
