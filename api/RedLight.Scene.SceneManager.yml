### YamlMime:ManagedReference
items:
- uid: RedLight.Scene.SceneManager
  commentId: T:RedLight.Scene.SceneManager
  id: SceneManager
  parent: RedLight.Scene
  children:
  - RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene)
  - RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene,RedLight.Input.RLKeyboard,RedLight.Input.RLMouse)
  - RedLight.Scene.SceneManager.GetCurrentScene
  - RedLight.Scene.SceneManager.Initialise(RedLight.RLEngine)
  - RedLight.Scene.SceneManager.Instance
  - RedLight.Scene.SceneManager.Remove(System.String)
  - RedLight.Scene.SceneManager.Scenes
  - RedLight.Scene.SceneManager.SwitchScene(RedLight.Scene.RLScene)
  - RedLight.Scene.SceneManager.SwitchScene(System.String)
  langs:
  - csharp
  - vb
  name: SceneManager
  nameWithType: SceneManager
  fullName: RedLight.Scene.SceneManager
  type: Class
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SceneManager
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 10
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public class SceneManager
    content.vb: Public Class SceneManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RedLight.Scene.SceneManager.Scenes
  commentId: P:RedLight.Scene.SceneManager.Scenes
  id: Scenes
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Scenes
  nameWithType: SceneManager.Scenes
  fullName: RedLight.Scene.SceneManager.Scenes
  type: Property
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Scenes
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 12
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public Dictionary<string, RLScene> Scenes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,RedLight.Scene.RLScene}
    content.vb: Public ReadOnly Property Scenes As Dictionary(Of String, RLScene)
  overload: RedLight.Scene.SceneManager.Scenes*
- uid: RedLight.Scene.SceneManager.Instance
  commentId: P:RedLight.Scene.SceneManager.Instance
  id: Instance
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SceneManager.Instance
  fullName: RedLight.Scene.SceneManager.Instance
  type: Property
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Instance
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 24
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public static SceneManager Instance { get; }
    parameters: []
    return:
      type: RedLight.Scene.SceneManager
    content.vb: Public Shared ReadOnly Property Instance As SceneManager
  overload: RedLight.Scene.SceneManager.Instance*
- uid: RedLight.Scene.SceneManager.Initialise(RedLight.RLEngine)
  commentId: M:RedLight.Scene.SceneManager.Initialise(RedLight.RLEngine)
  id: Initialise(RedLight.RLEngine)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Initialise(RLEngine)
  nameWithType: SceneManager.Initialise(RLEngine)
  fullName: RedLight.Scene.SceneManager.Initialise(RedLight.RLEngine)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Initialise
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 34
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public static void Initialise(RLEngine engine)
    parameters:
    - id: engine
      type: RedLight.RLEngine
    content.vb: Public Shared Sub Initialise(engine As RLEngine)
  overload: RedLight.Scene.SceneManager.Initialise*
- uid: RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene,RedLight.Input.RLKeyboard,RedLight.Input.RLMouse)
  commentId: M:RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene,RedLight.Input.RLKeyboard,RedLight.Input.RLMouse)
  id: Add(System.String,RedLight.Scene.RLScene,RedLight.Input.RLKeyboard,RedLight.Input.RLMouse)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Add(string, RLScene, RLKeyboard, RLMouse)
  nameWithType: SceneManager.Add(string, RLScene, RLKeyboard, RLMouse)
  fullName: RedLight.Scene.SceneManager.Add(string, RedLight.Scene.RLScene, RedLight.Input.RLKeyboard, RedLight.Input.RLMouse)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Add
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 52
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public void Add(string id, RLScene scene, RLKeyboard keyboard, RLMouse mouse)
    parameters:
    - id: id
      type: System.String
    - id: scene
      type: RedLight.Scene.RLScene
    - id: keyboard
      type: RedLight.Input.RLKeyboard
    - id: mouse
      type: RedLight.Input.RLMouse
    content.vb: Public Sub Add(id As String, scene As RLScene, keyboard As RLKeyboard, mouse As RLMouse)
  overload: RedLight.Scene.SceneManager.Add*
  nameWithType.vb: SceneManager.Add(String, RLScene, RLKeyboard, RLMouse)
  fullName.vb: RedLight.Scene.SceneManager.Add(String, RedLight.Scene.RLScene, RedLight.Input.RLKeyboard, RedLight.Input.RLMouse)
  name.vb: Add(String, RLScene, RLKeyboard, RLMouse)
- uid: RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene)
  commentId: M:RedLight.Scene.SceneManager.Add(System.String,RedLight.Scene.RLScene)
  id: Add(System.String,RedLight.Scene.RLScene)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Add(string, RLScene)
  nameWithType: SceneManager.Add(string, RLScene)
  fullName: RedLight.Scene.SceneManager.Add(string, RedLight.Scene.RLScene)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Add
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 73
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public void Add(string id, RLScene scene)
    parameters:
    - id: id
      type: System.String
    - id: scene
      type: RedLight.Scene.RLScene
    content.vb: Public Sub Add(id As String, scene As RLScene)
  overload: RedLight.Scene.SceneManager.Add*
  nameWithType.vb: SceneManager.Add(String, RLScene)
  fullName.vb: RedLight.Scene.SceneManager.Add(String, RedLight.Scene.RLScene)
  name.vb: Add(String, RLScene)
- uid: RedLight.Scene.SceneManager.SwitchScene(RedLight.Scene.RLScene)
  commentId: M:RedLight.Scene.SceneManager.SwitchScene(RedLight.Scene.RLScene)
  id: SwitchScene(RedLight.Scene.RLScene)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: SwitchScene(RLScene)
  nameWithType: SceneManager.SwitchScene(RLScene)
  fullName: RedLight.Scene.SceneManager.SwitchScene(RedLight.Scene.RLScene)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SwitchScene
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 78
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public void SwitchScene(RLScene scene)
    parameters:
    - id: scene
      type: RedLight.Scene.RLScene
    content.vb: Public Sub SwitchScene(scene As RLScene)
  overload: RedLight.Scene.SceneManager.SwitchScene*
- uid: RedLight.Scene.SceneManager.SwitchScene(System.String)
  commentId: M:RedLight.Scene.SceneManager.SwitchScene(System.String)
  id: SwitchScene(System.String)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: SwitchScene(string)
  nameWithType: SceneManager.SwitchScene(string)
  fullName: RedLight.Scene.SceneManager.SwitchScene(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SwitchScene
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 91
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public void SwitchScene(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub SwitchScene(id As String)
  overload: RedLight.Scene.SceneManager.SwitchScene*
  nameWithType.vb: SceneManager.SwitchScene(String)
  fullName.vb: RedLight.Scene.SceneManager.SwitchScene(String)
  name.vb: SwitchScene(String)
- uid: RedLight.Scene.SceneManager.Remove(System.String)
  commentId: M:RedLight.Scene.SceneManager.Remove(System.String)
  id: Remove(System.String)
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: SceneManager.Remove(string)
  fullName: RedLight.Scene.SceneManager.Remove(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Remove
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 227
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public void Remove(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub Remove(id As String)
  overload: RedLight.Scene.SceneManager.Remove*
  nameWithType.vb: SceneManager.Remove(String)
  fullName.vb: RedLight.Scene.SceneManager.Remove(String)
  name.vb: Remove(String)
- uid: RedLight.Scene.SceneManager.GetCurrentScene
  commentId: M:RedLight.Scene.SceneManager.GetCurrentScene
  id: GetCurrentScene
  parent: RedLight.Scene.SceneManager
  langs:
  - csharp
  - vb
  name: GetCurrentScene()
  nameWithType: SceneManager.GetCurrentScene()
  fullName: RedLight.Scene.SceneManager.GetCurrentScene()
  type: Method
  source:
    remote:
      path: src/RedLight/Scene/SceneManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: GetCurrentScene
    path: src/RedLight/Scene/SceneManager.cs
    startLine: 236
  assemblies:
  - RedLight
  namespace: RedLight.Scene
  syntax:
    content: public RLScene GetCurrentScene()
    return:
      type: RedLight.Scene.RLScene
    content.vb: Public Function GetCurrentScene() As RLScene
  overload: RedLight.Scene.SceneManager.GetCurrentScene*
references:
- uid: RedLight.Scene
  commentId: N:RedLight.Scene
  href: RedLight.html
  name: RedLight.Scene
  nameWithType: RedLight.Scene
  fullName: RedLight.Scene
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Scene
    name: Scene
    href: RedLight.Scene.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Scene
    name: Scene
    href: RedLight.Scene.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RedLight.Scene.SceneManager.Scenes*
  commentId: Overload:RedLight.Scene.SceneManager.Scenes
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_Scenes
  name: Scenes
  nameWithType: SceneManager.Scenes
  fullName: RedLight.Scene.SceneManager.Scenes
- uid: System.Collections.Generic.Dictionary{System.String,RedLight.Scene.RLScene}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RedLight.Scene.RLScene}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, RLScene>
  nameWithType: Dictionary<string, RLScene>
  fullName: System.Collections.Generic.Dictionary<string, RedLight.Scene.RLScene>
  nameWithType.vb: Dictionary(Of String, RLScene)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, RedLight.Scene.RLScene)
  name.vb: Dictionary(Of String, RLScene)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: RedLight.Scene.RLScene
    name: RLScene
    href: RedLight.Scene.RLScene.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: RedLight.Scene.RLScene
    name: RLScene
    href: RedLight.Scene.RLScene.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RedLight.Scene.SceneManager.Instance*
  commentId: Overload:RedLight.Scene.SceneManager.Instance
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_Instance
  name: Instance
  nameWithType: SceneManager.Instance
  fullName: RedLight.Scene.SceneManager.Instance
- uid: RedLight.Scene.SceneManager
  commentId: T:RedLight.Scene.SceneManager
  parent: RedLight.Scene
  href: RedLight.Scene.SceneManager.html
  name: SceneManager
  nameWithType: SceneManager
  fullName: RedLight.Scene.SceneManager
- uid: RedLight.Scene.SceneManager.Initialise*
  commentId: Overload:RedLight.Scene.SceneManager.Initialise
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_Initialise_RedLight_RLEngine_
  name: Initialise
  nameWithType: SceneManager.Initialise
  fullName: RedLight.Scene.SceneManager.Initialise
- uid: RedLight.RLEngine
  commentId: T:RedLight.RLEngine
  parent: RedLight
  href: RedLight.RLEngine.html
  name: RLEngine
  nameWithType: RLEngine
  fullName: RedLight.RLEngine
- uid: RedLight
  commentId: N:RedLight
  href: RedLight.html
  name: RedLight
  nameWithType: RedLight
  fullName: RedLight
- uid: RedLight.Scene.SceneManager.Add*
  commentId: Overload:RedLight.Scene.SceneManager.Add
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_Add_System_String_RedLight_Scene_RLScene_RedLight_Input_RLKeyboard_RedLight_Input_RLMouse_
  name: Add
  nameWithType: SceneManager.Add
  fullName: RedLight.Scene.SceneManager.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RedLight.Scene.RLScene
  commentId: T:RedLight.Scene.RLScene
  parent: RedLight.Scene
  href: RedLight.Scene.RLScene.html
  name: RLScene
  nameWithType: RLScene
  fullName: RedLight.Scene.RLScene
- uid: RedLight.Input.RLKeyboard
  commentId: T:RedLight.Input.RLKeyboard
  parent: RedLight.Input
  href: RedLight.Input.RLKeyboard.html
  name: RLKeyboard
  nameWithType: RLKeyboard
  fullName: RedLight.Input.RLKeyboard
- uid: RedLight.Input.RLMouse
  commentId: T:RedLight.Input.RLMouse
  parent: RedLight.Input
  href: RedLight.Input.RLMouse.html
  name: RLMouse
  nameWithType: RLMouse
  fullName: RedLight.Input.RLMouse
- uid: RedLight.Input
  commentId: N:RedLight.Input
  href: RedLight.html
  name: RedLight.Input
  nameWithType: RedLight.Input
  fullName: RedLight.Input
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Input
    name: Input
    href: RedLight.Input.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Input
    name: Input
    href: RedLight.Input.html
- uid: RedLight.Scene.SceneManager.SwitchScene*
  commentId: Overload:RedLight.Scene.SceneManager.SwitchScene
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_SwitchScene_RedLight_Scene_RLScene_
  name: SwitchScene
  nameWithType: SceneManager.SwitchScene
  fullName: RedLight.Scene.SceneManager.SwitchScene
- uid: RedLight.Scene.SceneManager.Remove*
  commentId: Overload:RedLight.Scene.SceneManager.Remove
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_Remove_System_String_
  name: Remove
  nameWithType: SceneManager.Remove
  fullName: RedLight.Scene.SceneManager.Remove
- uid: RedLight.Scene.SceneManager.GetCurrentScene*
  commentId: Overload:RedLight.Scene.SceneManager.GetCurrentScene
  href: RedLight.Scene.SceneManager.html#RedLight_Scene_SceneManager_GetCurrentScene
  name: GetCurrentScene
  nameWithType: SceneManager.GetCurrentScene
  fullName: RedLight.Scene.SceneManager.GetCurrentScene
