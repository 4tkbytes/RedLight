### YamlMime:ManagedReference
items:
- uid: RedLight.Graphics.TextureManager
  commentId: T:RedLight.Graphics.TextureManager
  id: TextureManager
  parent: RedLight.Graphics
  children:
  - RedLight.Graphics.TextureManager.Add(System.String,RedLight.Graphics.RLTexture)
  - RedLight.Graphics.TextureManager.Exists(System.String)
  - RedLight.Graphics.TextureManager.Get(System.String)
  - RedLight.Graphics.TextureManager.Instance
  - RedLight.Graphics.TextureManager.Remove(System.String)
  - RedLight.Graphics.TextureManager.TryAdd(System.String,RedLight.Graphics.RLTexture)
  - RedLight.Graphics.TextureManager.TryGet(System.String)
  - RedLight.Graphics.TextureManager.TryGet(System.String,System.Boolean)
  - RedLight.Graphics.TextureManager.TryRemove(System.String)
  - RedLight.Graphics.TextureManager.textures
  langs:
  - csharp
  - vb
  name: TextureManager
  nameWithType: TextureManager
  fullName: RedLight.Graphics.TextureManager
  type: Class
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: TextureManager
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 4
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public class TextureManager
    content.vb: Public Class TextureManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RedLight.Graphics.TextureManager.Instance
  commentId: P:RedLight.Graphics.TextureManager.Instance
  id: Instance
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TextureManager.Instance
  fullName: RedLight.Graphics.TextureManager.Instance
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Instance
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 7
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public static TextureManager Instance { get; }
    parameters: []
    return:
      type: RedLight.Graphics.TextureManager
    content.vb: Public Shared ReadOnly Property Instance As TextureManager
  overload: RedLight.Graphics.TextureManager.Instance*
- uid: RedLight.Graphics.TextureManager.textures
  commentId: F:RedLight.Graphics.TextureManager.textures
  id: textures
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: textures
  nameWithType: TextureManager.textures
  fullName: RedLight.Graphics.TextureManager.textures
  type: Field
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: textures
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 9
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Dictionary<string, RLTexture> textures
    return:
      type: System.Collections.Generic.Dictionary{System.String,RedLight.Graphics.RLTexture}
    content.vb: Public textures As Dictionary(Of String, RLTexture)
- uid: RedLight.Graphics.TextureManager.Add(System.String,RedLight.Graphics.RLTexture)
  commentId: M:RedLight.Graphics.TextureManager.Add(System.String,RedLight.Graphics.RLTexture)
  id: Add(System.String,RedLight.Graphics.RLTexture)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: Add(string, RLTexture)
  nameWithType: TextureManager.Add(string, RLTexture)
  fullName: RedLight.Graphics.TextureManager.Add(string, RedLight.Graphics.RLTexture)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Add
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 20
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function attempts to add a texture to its dictionary. If the texture exists, it will throw

    an exception. If it does exist, it will add the texture to its ID to the dictionary.
  example: []
  syntax:
    content: public void Add(string id, RLTexture rlTexture)
    parameters:
    - id: id
      type: System.String
      description: ''
    - id: rlTexture
      type: RedLight.Graphics.RLTexture
      description: ''
    content.vb: Public Sub Add(id As String, rlTexture As RLTexture)
  overload: RedLight.Graphics.TextureManager.Add*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: TextureManager.Add(String, RLTexture)
  fullName.vb: RedLight.Graphics.TextureManager.Add(String, RedLight.Graphics.RLTexture)
  name.vb: Add(String, RLTexture)
- uid: RedLight.Graphics.TextureManager.TryAdd(System.String,RedLight.Graphics.RLTexture)
  commentId: M:RedLight.Graphics.TextureManager.TryAdd(System.String,RedLight.Graphics.RLTexture)
  id: TryAdd(System.String,RedLight.Graphics.RLTexture)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: TryAdd(string, RLTexture)
  nameWithType: TextureManager.TryAdd(string, RLTexture)
  fullName: RedLight.Graphics.TextureManager.TryAdd(string, RedLight.Graphics.RLTexture)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: TryAdd
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 37
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function attempts to add a texture to its dictionary. If the texture exists, it will Log a warning and

    not add. If it does exist, it will add the texture to its ID to the dictionary.
  example: []
  syntax:
    content: public void TryAdd(string id, RLTexture rlTexture)
    parameters:
    - id: id
      type: System.String
      description: The name of the texture
    - id: rlTexture
      type: RedLight.Graphics.RLTexture
      description: The texture
    content.vb: Public Sub TryAdd(id As String, rlTexture As RLTexture)
  overload: RedLight.Graphics.TextureManager.TryAdd*
  nameWithType.vb: TextureManager.TryAdd(String, RLTexture)
  fullName.vb: RedLight.Graphics.TextureManager.TryAdd(String, RedLight.Graphics.RLTexture)
  name.vb: TryAdd(String, RLTexture)
- uid: RedLight.Graphics.TextureManager.Get(System.String)
  commentId: M:RedLight.Graphics.TextureManager.Get(System.String)
  id: Get(System.String)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: Get(string)
  nameWithType: TextureManager.Get(string)
  fullName: RedLight.Graphics.TextureManager.Get(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Get
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 54
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function attempts to fetch the Texture from its id. If the texture does not exist, it will throw

    an exception. If it does exist, it will return a RLTexture.
  example: []
  syntax:
    content: public RLTexture Get(string id)
    parameters:
    - id: id
      type: System.String
      description: ''
    return:
      type: RedLight.Graphics.RLTexture
      description: RLTexture
    content.vb: Public Function [Get](id As String) As RLTexture
  overload: RedLight.Graphics.TextureManager.Get*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: TextureManager.Get(String)
  fullName.vb: RedLight.Graphics.TextureManager.Get(String)
  name.vb: Get(String)
- uid: RedLight.Graphics.TextureManager.TryGet(System.String)
  commentId: M:RedLight.Graphics.TextureManager.TryGet(System.String)
  id: TryGet(System.String)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: TryGet(string)
  nameWithType: TextureManager.TryGet(string)
  fullName: RedLight.Graphics.TextureManager.TryGet(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: TryGet
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 70
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function attempts to fetch the Texture from its id. If the texture does not exist, it will Log a warning

    and return null. If it does exist, it will return a RLTexture.
  example: []
  syntax:
    content: public RLTexture TryGet(string id)
    parameters:
    - id: id
      type: System.String
      description: ''
    return:
      type: RedLight.Graphics.RLTexture
      description: RLTexture
    content.vb: Public Function TryGet(id As String) As RLTexture
  overload: RedLight.Graphics.TextureManager.TryGet*
  nameWithType.vb: TextureManager.TryGet(String)
  fullName.vb: RedLight.Graphics.TextureManager.TryGet(String)
  name.vb: TryGet(String)
- uid: RedLight.Graphics.TextureManager.TryGet(System.String,System.Boolean)
  commentId: M:RedLight.Graphics.TextureManager.TryGet(System.String,System.Boolean)
  id: TryGet(System.String,System.Boolean)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: TryGet(string, bool)
  nameWithType: TextureManager.TryGet(string, bool)
  fullName: RedLight.Graphics.TextureManager.TryGet(string, bool)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: TryGet
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 90
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function attempts to fetch the Texture from its id. If the texture does not exist, it will Log a warning

    and return null. If it does exist, it will return a RLTexture.


    This function contains an additional parameter, where if it is silent it will not log and silently return null.
  example: []
  syntax:
    content: public RLTexture TryGet(string id, bool silent)
    parameters:
    - id: id
      type: System.String
      description: ''
    - id: silent
      type: System.Boolean
      description: ''
    return:
      type: RedLight.Graphics.RLTexture
      description: RLTexture
    content.vb: Public Function TryGet(id As String, silent As Boolean) As RLTexture
  overload: RedLight.Graphics.TextureManager.TryGet*
  nameWithType.vb: TextureManager.TryGet(String, Boolean)
  fullName.vb: RedLight.Graphics.TextureManager.TryGet(String, Boolean)
  name.vb: TryGet(String, Boolean)
- uid: RedLight.Graphics.TextureManager.Exists(System.String)
  commentId: M:RedLight.Graphics.TextureManager.Exists(System.String)
  id: Exists(System.String)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: Exists(string)
  nameWithType: TextureManager.Exists(string)
  fullName: RedLight.Graphics.TextureManager.Exists(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Exists
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 102
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public bool Exists(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Exists(id As String) As Boolean
  overload: RedLight.Graphics.TextureManager.Exists*
  nameWithType.vb: TextureManager.Exists(String)
  fullName.vb: RedLight.Graphics.TextureManager.Exists(String)
  name.vb: Exists(String)
- uid: RedLight.Graphics.TextureManager.Remove(System.String)
  commentId: M:RedLight.Graphics.TextureManager.Remove(System.String)
  id: Remove(System.String)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: TextureManager.Remove(string)
  fullName: RedLight.Graphics.TextureManager.Remove(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Remove
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 113
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function removes the RLTexture from the dictionary by searching by its ID. If there is no texture with the ID,

    it will throw an Exception. Otherwise it will remove the texture.
  example: []
  syntax:
    content: public void Remove(string id)
    parameters:
    - id: id
      type: System.String
      description: ''
    content.vb: Public Sub Remove(id As String)
  overload: RedLight.Graphics.TextureManager.Remove*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: TextureManager.Remove(String)
  fullName.vb: RedLight.Graphics.TextureManager.Remove(String)
  name.vb: Remove(String)
- uid: RedLight.Graphics.TextureManager.TryRemove(System.String)
  commentId: M:RedLight.Graphics.TextureManager.TryRemove(System.String)
  id: TryRemove(System.String)
  parent: RedLight.Graphics.TextureManager
  langs:
  - csharp
  - vb
  name: TryRemove(string)
  nameWithType: TextureManager.TryRemove(string)
  fullName: RedLight.Graphics.TextureManager.TryRemove(string)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/TextureManager.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: TryRemove
    path: src/RedLight/Graphics/TextureManager.cs
    startLine: 128
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This function removes the RLTexture from the dictionary by searching by its ID. If there is no texture with the ID,

    it will just return nothing, without deleting it (because there is no need to). Otherwise it will remove the texture.
  example: []
  syntax:
    content: public void TryRemove(string id)
    parameters:
    - id: id
      type: System.String
      description: ''
    content.vb: Public Sub TryRemove(id As String)
  overload: RedLight.Graphics.TextureManager.TryRemove*
  nameWithType.vb: TextureManager.TryRemove(String)
  fullName.vb: RedLight.Graphics.TextureManager.TryRemove(String)
  name.vb: TryRemove(String)
references:
- uid: RedLight.Graphics
  commentId: N:RedLight.Graphics
  href: RedLight.html
  name: RedLight.Graphics
  nameWithType: RedLight.Graphics
  fullName: RedLight.Graphics
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RedLight.Graphics.TextureManager.Instance*
  commentId: Overload:RedLight.Graphics.TextureManager.Instance
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_Instance
  name: Instance
  nameWithType: TextureManager.Instance
  fullName: RedLight.Graphics.TextureManager.Instance
- uid: RedLight.Graphics.TextureManager
  commentId: T:RedLight.Graphics.TextureManager
  parent: RedLight.Graphics
  href: RedLight.Graphics.TextureManager.html
  name: TextureManager
  nameWithType: TextureManager
  fullName: RedLight.Graphics.TextureManager
- uid: System.Collections.Generic.Dictionary{System.String,RedLight.Graphics.RLTexture}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RedLight.Graphics.RLTexture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, RLTexture>
  nameWithType: Dictionary<string, RLTexture>
  fullName: System.Collections.Generic.Dictionary<string, RedLight.Graphics.RLTexture>
  nameWithType.vb: Dictionary(Of String, RLTexture)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, RedLight.Graphics.RLTexture)
  name.vb: Dictionary(Of String, RLTexture)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: RedLight.Graphics.RLTexture
    name: RLTexture
    href: RedLight.Graphics.RLTexture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: RedLight.Graphics.RLTexture
    name: RLTexture
    href: RedLight.Graphics.RLTexture.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: RedLight.Graphics.TextureManager.Add*
  commentId: Overload:RedLight.Graphics.TextureManager.Add
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_Add_System_String_RedLight_Graphics_RLTexture_
  name: Add
  nameWithType: TextureManager.Add
  fullName: RedLight.Graphics.TextureManager.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RedLight.Graphics.RLTexture
  commentId: T:RedLight.Graphics.RLTexture
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLTexture.html
  name: RLTexture
  nameWithType: RLTexture
  fullName: RedLight.Graphics.RLTexture
- uid: RedLight.Graphics.TextureManager.TryAdd*
  commentId: Overload:RedLight.Graphics.TextureManager.TryAdd
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_TryAdd_System_String_RedLight_Graphics_RLTexture_
  name: TryAdd
  nameWithType: TextureManager.TryAdd
  fullName: RedLight.Graphics.TextureManager.TryAdd
- uid: RedLight.Graphics.TextureManager.Get*
  commentId: Overload:RedLight.Graphics.TextureManager.Get
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_Get_System_String_
  name: Get
  nameWithType: TextureManager.Get
  fullName: RedLight.Graphics.TextureManager.Get
- uid: RedLight.Graphics.TextureManager.TryGet*
  commentId: Overload:RedLight.Graphics.TextureManager.TryGet
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_TryGet_System_String_
  name: TryGet
  nameWithType: TextureManager.TryGet
  fullName: RedLight.Graphics.TextureManager.TryGet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RedLight.Graphics.TextureManager.Exists*
  commentId: Overload:RedLight.Graphics.TextureManager.Exists
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_Exists_System_String_
  name: Exists
  nameWithType: TextureManager.Exists
  fullName: RedLight.Graphics.TextureManager.Exists
- uid: RedLight.Graphics.TextureManager.Remove*
  commentId: Overload:RedLight.Graphics.TextureManager.Remove
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_Remove_System_String_
  name: Remove
  nameWithType: TextureManager.Remove
  fullName: RedLight.Graphics.TextureManager.Remove
- uid: RedLight.Graphics.TextureManager.TryRemove*
  commentId: Overload:RedLight.Graphics.TextureManager.TryRemove
  href: RedLight.Graphics.TextureManager.html#RedLight_Graphics_TextureManager_TryRemove_System_String_
  name: TryRemove
  nameWithType: TextureManager.TryRemove
  fullName: RedLight.Graphics.TextureManager.TryRemove
