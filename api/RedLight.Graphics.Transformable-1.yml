### YamlMime:ManagedReference
items:
- uid: RedLight.Graphics.Transformable`1
  commentId: T:RedLight.Graphics.Transformable`1
  id: Transformable`1
  parent: RedLight.Graphics
  children:
  - RedLight.Graphics.Transformable`1.#ctor(`0)
  - RedLight.Graphics.Transformable`1.AbsoluteReset
  - RedLight.Graphics.Transformable`1.AbsoluteReset(System.Single)
  - RedLight.Graphics.Transformable`1.MakeTransformable(`0)
  - RedLight.Graphics.Transformable`1.ModelMatrix
  - RedLight.Graphics.Transformable`1.Position
  - RedLight.Graphics.Transformable`1.Release
  - RedLight.Graphics.Transformable`1.Reset(System.Boolean)
  - RedLight.Graphics.Transformable`1.Rotate(System.Single,System.Numerics.Vector3)
  - RedLight.Graphics.Transformable`1.Rotation
  - RedLight.Graphics.Transformable`1.Scale
  - RedLight.Graphics.Transformable`1.SetDefault
  - RedLight.Graphics.Transformable`1.SetModel(System.Numerics.Matrix4x4)
  - RedLight.Graphics.Transformable`1.SetPosition(System.Numerics.Vector3)
  - RedLight.Graphics.Transformable`1.SetScale(System.Numerics.Vector3)
  - RedLight.Graphics.Transformable`1.Target
  - RedLight.Graphics.Transformable`1.Translate(System.Numerics.Vector3)
  - RedLight.Graphics.Transformable`1.eulerAngles
  langs:
  - csharp
  - vb
  name: Transformable<T>
  nameWithType: Transformable<T>
  fullName: RedLight.Graphics.Transformable<T>
  type: Class
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Transformable
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 11
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    This class makes any class transformable. Typically used with Meshes or RLModels, this class can allow you to

    translate the model, rotate the model or change its scale.
  example: []
  syntax:
    content: public abstract class Transformable<T>
    typeParameters:
    - id: T
      description: >-
        <xref href="RedLight.Graphics.RLModel" data-throw-if-not-resolved="false"></xref>

        <xref href="RedLight.Graphics.Mesh" data-throw-if-not-resolved="false"></xref>
    content.vb: Public MustInherit Class Transformable(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - RedLight.Graphics.ConcreteTransformable`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Transformable(Of T)
  fullName.vb: RedLight.Graphics.Transformable(Of T)
  name.vb: Transformable(Of T)
- uid: RedLight.Graphics.Transformable`1.eulerAngles
  commentId: F:RedLight.Graphics.Transformable`1.eulerAngles
  id: eulerAngles
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: eulerAngles
  nameWithType: Transformable<T>.eulerAngles
  fullName: RedLight.Graphics.Transformable<T>.eulerAngles
  type: Field
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: eulerAngles
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 17
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Vector3 eulerAngles
    return:
      type: System.Numerics.Vector3
    content.vb: Public eulerAngles As Vector3
  nameWithType.vb: Transformable(Of T).eulerAngles
  fullName.vb: RedLight.Graphics.Transformable(Of T).eulerAngles
- uid: RedLight.Graphics.Transformable`1.ModelMatrix
  commentId: P:RedLight.Graphics.Transformable`1.ModelMatrix
  id: ModelMatrix
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: ModelMatrix
  nameWithType: Transformable<T>.ModelMatrix
  fullName: RedLight.Graphics.Transformable<T>.ModelMatrix
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: ModelMatrix
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 18
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Matrix4x4 ModelMatrix { get; }
    parameters: []
    return:
      type: System.Numerics.Matrix4x4
    content.vb: Public Property ModelMatrix As Matrix4x4
  overload: RedLight.Graphics.Transformable`1.ModelMatrix*
  nameWithType.vb: Transformable(Of T).ModelMatrix
  fullName.vb: RedLight.Graphics.Transformable(Of T).ModelMatrix
- uid: RedLight.Graphics.Transformable`1.Target
  commentId: P:RedLight.Graphics.Transformable`1.Target
  id: Target
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: Transformable<T>.Target
  fullName: RedLight.Graphics.Transformable<T>.Target
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Target
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 24
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    The target, specifically what you put in when you initialised a Transformable, or it

    could be an RLModel/Mesh depending on how the program feels.
  example: []
  syntax:
    content: public T Target { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Target As T
  overload: RedLight.Graphics.Transformable`1.Target*
  nameWithType.vb: Transformable(Of T).Target
  fullName.vb: RedLight.Graphics.Transformable(Of T).Target
- uid: RedLight.Graphics.Transformable`1.#ctor(`0)
  commentId: M:RedLight.Graphics.Transformable`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Transformable(T)
  nameWithType: Transformable<T>.Transformable(T)
  fullName: RedLight.Graphics.Transformable<T>.Transformable(T)
  type: Constructor
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 30
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Transformable(T target)
    parameters:
    - id: target
      type: '{T}'
    content.vb: Public Sub New(target As T)
  overload: RedLight.Graphics.Transformable`1.#ctor*
  nameWithType.vb: Transformable(Of T).New(T)
  fullName.vb: RedLight.Graphics.Transformable(Of T).New(T)
  name.vb: New(T)
- uid: RedLight.Graphics.Transformable`1.Translate(System.Numerics.Vector3)
  commentId: M:RedLight.Graphics.Transformable`1.Translate(System.Numerics.Vector3)
  id: Translate(System.Numerics.Vector3)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Translate(Vector3)
  nameWithType: Transformable<T>.Translate(Vector3)
  fullName: RedLight.Graphics.Transformable<T>.Translate(System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Translate
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 40
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Translate the target by a Vector3D float.
  example: []
  syntax:
    content: public Transformable<T> Translate(Vector3 translation)
    parameters:
    - id: translation
      type: System.Numerics.Vector3
      description: <xref href="System.Numerics.Vector3" data-throw-if-not-resolved="false"></xref>
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Translate(translation As Vector3) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.Translate*
  nameWithType.vb: Transformable(Of T).Translate(Vector3)
  fullName.vb: RedLight.Graphics.Transformable(Of T).Translate(System.Numerics.Vector3)
- uid: RedLight.Graphics.Transformable`1.Rotate(System.Single,System.Numerics.Vector3)
  commentId: M:RedLight.Graphics.Transformable`1.Rotate(System.Single,System.Numerics.Vector3)
  id: Rotate(System.Single,System.Numerics.Vector3)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Rotate(float, Vector3)
  nameWithType: Transformable<T>.Rotate(float, Vector3)
  fullName: RedLight.Graphics.Transformable<T>.Rotate(float, System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Rotate
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 53
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Rotates the target by a radians and its axis (typically Vector3's UnitX, UnitY or UnitZ).
  example: []
  syntax:
    content: public Transformable<T> Rotate(float radians, Vector3 axis)
    parameters:
    - id: radians
      type: System.Single
      description: float
    - id: axis
      type: System.Numerics.Vector3
      description: <xref href="System.Numerics.Vector3" data-throw-if-not-resolved="false"></xref>
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Rotate(radians As Single, axis As Vector3) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.Rotate*
  nameWithType.vb: Transformable(Of T).Rotate(Single, Vector3)
  fullName.vb: RedLight.Graphics.Transformable(Of T).Rotate(Single, System.Numerics.Vector3)
  name.vb: Rotate(Single, Vector3)
- uid: RedLight.Graphics.Transformable`1.SetScale(System.Numerics.Vector3)
  commentId: M:RedLight.Graphics.Transformable`1.SetScale(System.Numerics.Vector3)
  id: SetScale(System.Numerics.Vector3)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: SetScale(Vector3)
  nameWithType: Transformable<T>.SetScale(Vector3)
  fullName: RedLight.Graphics.Transformable<T>.SetScale(System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SetScale
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 67
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Changes the scale of the model. Takes an input of scale and multiplies the model matrix by the scale.
  example: []
  syntax:
    content: public Transformable<T> SetScale(Vector3 scale)
    parameters:
    - id: scale
      type: System.Numerics.Vector3
      description: <xref href="System.Numerics.Vector3" data-throw-if-not-resolved="false"></xref>
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SetScale(scale As Vector3) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.SetScale*
  nameWithType.vb: Transformable(Of T).SetScale(Vector3)
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetScale(System.Numerics.Vector3)
- uid: RedLight.Graphics.Transformable`1.SetPosition(System.Numerics.Vector3)
  commentId: M:RedLight.Graphics.Transformable`1.SetPosition(System.Numerics.Vector3)
  id: SetPosition(System.Numerics.Vector3)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: SetPosition(Vector3)
  nameWithType: Transformable<T>.SetPosition(Vector3)
  fullName: RedLight.Graphics.Transformable<T>.SetPosition(System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SetPosition
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 74
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Transformable<T> SetPosition(Vector3 position)
    parameters:
    - id: position
      type: System.Numerics.Vector3
    return:
      type: RedLight.Graphics.Transformable`1
    content.vb: Public Function SetPosition(position As Vector3) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.SetPosition*
  nameWithType.vb: Transformable(Of T).SetPosition(Vector3)
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetPosition(System.Numerics.Vector3)
- uid: RedLight.Graphics.Transformable`1.AbsoluteReset
  commentId: M:RedLight.Graphics.Transformable`1.AbsoluteReset
  id: AbsoluteReset
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: AbsoluteReset()
  nameWithType: Transformable<T>.AbsoluteReset()
  fullName: RedLight.Graphics.Transformable<T>.AbsoluteReset()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AbsoluteReset
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 94
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Resets the model to its matrix identity.
  example: []
  syntax:
    content: public Transformable<T> AbsoluteReset()
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function AbsoluteReset() As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.AbsoluteReset*
  nameWithType.vb: Transformable(Of T).AbsoluteReset()
  fullName.vb: RedLight.Graphics.Transformable(Of T).AbsoluteReset()
- uid: RedLight.Graphics.Transformable`1.AbsoluteReset(System.Single)
  commentId: M:RedLight.Graphics.Transformable`1.AbsoluteReset(System.Single)
  id: AbsoluteReset(System.Single)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: AbsoluteReset(float)
  nameWithType: Transformable<T>.AbsoluteReset(float)
  fullName: RedLight.Graphics.Transformable<T>.AbsoluteReset(float)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AbsoluteReset
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 107
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Reset the model to its matrix identity multiplied by a scalar.
  example: []
  syntax:
    content: public Transformable<T> AbsoluteReset(float scalar)
    parameters:
    - id: scalar
      type: System.Single
      description: <xref href="System.Single" data-throw-if-not-resolved="false"></xref>
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function AbsoluteReset(scalar As Single) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.AbsoluteReset*
  nameWithType.vb: Transformable(Of T).AbsoluteReset(Single)
  fullName.vb: RedLight.Graphics.Transformable(Of T).AbsoluteReset(Single)
  name.vb: AbsoluteReset(Single)
- uid: RedLight.Graphics.Transformable`1.Reset(System.Boolean)
  commentId: M:RedLight.Graphics.Transformable`1.Reset(System.Boolean)
  id: Reset(System.Boolean)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Reset(bool)
  nameWithType: Transformable<T>.Reset(bool)
  fullName: RedLight.Graphics.Transformable<T>.Reset(bool)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Reset
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 121
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Resets the model to a previously changed state. It requires a lock state to have been created, which can be

    created using SetDefault().
  example: []
  syntax:
    content: public Transformable<T> Reset(bool silent = true)
    parameters:
    - id: silent
      type: System.Boolean
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Reset(silent As Boolean = True) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.Reset*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: Transformable(Of T).Reset(Boolean)
  fullName.vb: RedLight.Graphics.Transformable(Of T).Reset(Boolean)
  name.vb: Reset(Boolean)
- uid: RedLight.Graphics.Transformable`1.Release
  commentId: M:RedLight.Graphics.Transformable`1.Release
  id: Release
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: Transformable<T>.Release()
  fullName: RedLight.Graphics.Transformable<T>.Release()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Release
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 141
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Releases the lock state by setting the related boolean to false. To reuse the lock state,

    you will have to use recreate another lock state by using <xref href="RedLight.Graphics.Transformable%601.SetDefault" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Transformable<T> Release()
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref> Self
    content.vb: Public Function Release() As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.Release*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: Transformable(Of T).Release()
  fullName.vb: RedLight.Graphics.Transformable(Of T).Release()
- uid: RedLight.Graphics.Transformable`1.SetDefault
  commentId: M:RedLight.Graphics.Transformable`1.SetDefault
  id: SetDefault
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: SetDefault()
  nameWithType: Transformable<T>.SetDefault()
  fullName: RedLight.Graphics.Transformable<T>.SetDefault()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SetDefault
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 156
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: "\"Saves\" the previous model state and creates a lock state. It can be reset to its original position at the time\r\nwhen the lock state was created by using Reset()."
  example: []
  syntax:
    content: public Transformable<T> SetDefault()
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SetDefault() As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.SetDefault*
  nameWithType.vb: Transformable(Of T).SetDefault()
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetDefault()
- uid: RedLight.Graphics.Transformable`1.SetModel(System.Numerics.Matrix4x4)
  commentId: M:RedLight.Graphics.Transformable`1.SetModel(System.Numerics.Matrix4x4)
  id: SetModel(System.Numerics.Matrix4x4)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: SetModel(Matrix4x4)
  nameWithType: Transformable<T>.SetModel(Matrix4x4)
  fullName: RedLight.Graphics.Transformable<T>.SetModel(System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SetModel
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 169
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Sets the model matrix
  example: []
  syntax:
    content: public Transformable<T> SetModel(Matrix4x4 model)
    parameters:
    - id: model
      type: System.Numerics.Matrix4x4
      description: <xref href="System.Numerics.Matrix4x4" data-throw-if-not-resolved="false"></xref>
    return:
      type: RedLight.Graphics.Transformable`1
      description: <xref href="RedLight.Graphics.Transformable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SetModel(model As Matrix4x4) As Transformable(Of T)
  overload: RedLight.Graphics.Transformable`1.SetModel*
  nameWithType.vb: Transformable(Of T).SetModel(Matrix4x4)
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetModel(System.Numerics.Matrix4x4)
- uid: RedLight.Graphics.Transformable`1.MakeTransformable(`0)
  commentId: M:RedLight.Graphics.Transformable`1.MakeTransformable(`0)
  id: MakeTransformable(`0)
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: MakeTransformable(T)
  nameWithType: Transformable<T>.MakeTransformable(T)
  fullName: RedLight.Graphics.Transformable<T>.MakeTransformable(T)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: MakeTransformable
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 179
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Extension method to make an RLModel transformable
  example: []
  syntax:
    content: public static ConcreteTransformable<T> MakeTransformable(T target)
    parameters:
    - id: target
      type: '{T}'
    return:
      type: RedLight.Graphics.ConcreteTransformable{{T}}
      description: ''
    content.vb: Public Shared Function MakeTransformable(target As T) As ConcreteTransformable(Of T)
  overload: RedLight.Graphics.Transformable`1.MakeTransformable*
  nameWithType.vb: Transformable(Of T).MakeTransformable(T)
  fullName.vb: RedLight.Graphics.Transformable(Of T).MakeTransformable(T)
- uid: RedLight.Graphics.Transformable`1.Position
  commentId: P:RedLight.Graphics.Transformable`1.Position
  id: Position
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Transformable<T>.Position
  fullName: RedLight.Graphics.Transformable<T>.Position
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Position
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 184
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: RedLight.Graphics.Transformable`1.Position*
  nameWithType.vb: Transformable(Of T).Position
  fullName.vb: RedLight.Graphics.Transformable(Of T).Position
- uid: RedLight.Graphics.Transformable`1.Scale
  commentId: P:RedLight.Graphics.Transformable`1.Scale
  id: Scale
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Transformable<T>.Scale
  fullName: RedLight.Graphics.Transformable<T>.Scale
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Scale
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 189
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Vector3 Scale { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Scale As Vector3
  overload: RedLight.Graphics.Transformable`1.Scale*
  nameWithType.vb: Transformable(Of T).Scale
  fullName.vb: RedLight.Graphics.Transformable(Of T).Scale
- uid: RedLight.Graphics.Transformable`1.Rotation
  commentId: P:RedLight.Graphics.Transformable`1.Rotation
  id: Rotation
  parent: RedLight.Graphics.Transformable`1
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Transformable<T>.Rotation
  fullName: RedLight.Graphics.Transformable<T>.Rotation
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/Transformable.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Rotation
    path: src/RedLight/Graphics/Transformable.cs
    startLine: 200
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public Vector3 Rotation { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Rotation As Vector3
  overload: RedLight.Graphics.Transformable`1.Rotation*
  nameWithType.vb: Transformable(Of T).Rotation
  fullName.vb: RedLight.Graphics.Transformable(Of T).Rotation
references:
- uid: RedLight.Graphics.RLModel
  commentId: T:RedLight.Graphics.RLModel
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLModel.html
  name: RLModel
  nameWithType: RLModel
  fullName: RedLight.Graphics.RLModel
- uid: RedLight.Graphics.Mesh
  commentId: T:RedLight.Graphics.Mesh
  parent: RedLight.Graphics
  href: RedLight.Graphics.Mesh.html
  name: Mesh
  nameWithType: Mesh
  fullName: RedLight.Graphics.Mesh
- uid: RedLight.Graphics
  commentId: N:RedLight.Graphics
  href: RedLight.html
  name: RedLight.Graphics
  nameWithType: RedLight.Graphics
  fullName: RedLight.Graphics
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: RedLight.Graphics.Transformable`1.ModelMatrix*
  commentId: Overload:RedLight.Graphics.Transformable`1.ModelMatrix
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_ModelMatrix
  name: ModelMatrix
  nameWithType: Transformable<T>.ModelMatrix
  fullName: RedLight.Graphics.Transformable<T>.ModelMatrix
  nameWithType.vb: Transformable(Of T).ModelMatrix
  fullName.vb: RedLight.Graphics.Transformable(Of T).ModelMatrix
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: RedLight.Graphics.Transformable`1.Target*
  commentId: Overload:RedLight.Graphics.Transformable`1.Target
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Target
  name: Target
  nameWithType: Transformable<T>.Target
  fullName: RedLight.Graphics.Transformable<T>.Target
  nameWithType.vb: Transformable(Of T).Target
  fullName.vb: RedLight.Graphics.Transformable(Of T).Target
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: RedLight.Graphics.Transformable`1.#ctor*
  commentId: Overload:RedLight.Graphics.Transformable`1.#ctor
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1__ctor__0_
  name: Transformable
  nameWithType: Transformable<T>.Transformable
  fullName: RedLight.Graphics.Transformable<T>.Transformable
  nameWithType.vb: Transformable(Of T).New
  fullName.vb: RedLight.Graphics.Transformable(Of T).New
  name.vb: New
- uid: RedLight.Graphics.Transformable`1
  commentId: T:RedLight.Graphics.Transformable`1
  parent: RedLight.Graphics
  href: RedLight.Graphics.Transformable-1.html
  name: Transformable<T>
  nameWithType: Transformable<T>
  fullName: RedLight.Graphics.Transformable<T>
  nameWithType.vb: Transformable(Of T)
  fullName.vb: RedLight.Graphics.Transformable(Of T)
  name.vb: Transformable(Of T)
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RedLight.Graphics.Transformable`1.Translate*
  commentId: Overload:RedLight.Graphics.Transformable`1.Translate
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Translate_System_Numerics_Vector3_
  name: Translate
  nameWithType: Transformable<T>.Translate
  fullName: RedLight.Graphics.Transformable<T>.Translate
  nameWithType.vb: Transformable(Of T).Translate
  fullName.vb: RedLight.Graphics.Transformable(Of T).Translate
- uid: RedLight.Graphics.Transformable`1.Rotate*
  commentId: Overload:RedLight.Graphics.Transformable`1.Rotate
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Rotate_System_Single_System_Numerics_Vector3_
  name: Rotate
  nameWithType: Transformable<T>.Rotate
  fullName: RedLight.Graphics.Transformable<T>.Rotate
  nameWithType.vb: Transformable(Of T).Rotate
  fullName.vb: RedLight.Graphics.Transformable(Of T).Rotate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RedLight.Graphics.Transformable`1.SetScale*
  commentId: Overload:RedLight.Graphics.Transformable`1.SetScale
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetScale_System_Numerics_Vector3_
  name: SetScale
  nameWithType: Transformable<T>.SetScale
  fullName: RedLight.Graphics.Transformable<T>.SetScale
  nameWithType.vb: Transformable(Of T).SetScale
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetScale
- uid: RedLight.Graphics.Transformable`1.SetPosition*
  commentId: Overload:RedLight.Graphics.Transformable`1.SetPosition
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetPosition_System_Numerics_Vector3_
  name: SetPosition
  nameWithType: Transformable<T>.SetPosition
  fullName: RedLight.Graphics.Transformable<T>.SetPosition
  nameWithType.vb: Transformable(Of T).SetPosition
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetPosition
- uid: RedLight.Graphics.Transformable`1.AbsoluteReset*
  commentId: Overload:RedLight.Graphics.Transformable`1.AbsoluteReset
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_AbsoluteReset
  name: AbsoluteReset
  nameWithType: Transformable<T>.AbsoluteReset
  fullName: RedLight.Graphics.Transformable<T>.AbsoluteReset
  nameWithType.vb: Transformable(Of T).AbsoluteReset
  fullName.vb: RedLight.Graphics.Transformable(Of T).AbsoluteReset
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: RedLight.Graphics.Transformable`1.Reset*
  commentId: Overload:RedLight.Graphics.Transformable`1.Reset
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Reset_System_Boolean_
  name: Reset
  nameWithType: Transformable<T>.Reset
  fullName: RedLight.Graphics.Transformable<T>.Reset
  nameWithType.vb: Transformable(Of T).Reset
  fullName.vb: RedLight.Graphics.Transformable(Of T).Reset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RedLight.Graphics.Transformable`1.SetDefault
  commentId: M:RedLight.Graphics.Transformable`1.SetDefault
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetDefault
  name: SetDefault()
  nameWithType: Transformable<T>.SetDefault()
  fullName: RedLight.Graphics.Transformable<T>.SetDefault()
  nameWithType.vb: Transformable(Of T).SetDefault()
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetDefault()
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1.SetDefault
    name: SetDefault
    href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetDefault
  - name: (
  - name: )
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1.SetDefault
    name: SetDefault
    href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetDefault
  - name: (
  - name: )
- uid: RedLight.Graphics.Transformable`1.Release*
  commentId: Overload:RedLight.Graphics.Transformable`1.Release
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Release
  name: Release
  nameWithType: Transformable<T>.Release
  fullName: RedLight.Graphics.Transformable<T>.Release
  nameWithType.vb: Transformable(Of T).Release
  fullName.vb: RedLight.Graphics.Transformable(Of T).Release
- uid: RedLight.Graphics.Transformable`1.SetDefault*
  commentId: Overload:RedLight.Graphics.Transformable`1.SetDefault
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetDefault
  name: SetDefault
  nameWithType: Transformable<T>.SetDefault
  fullName: RedLight.Graphics.Transformable<T>.SetDefault
  nameWithType.vb: Transformable(Of T).SetDefault
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetDefault
- uid: RedLight.Graphics.Transformable`1.SetModel*
  commentId: Overload:RedLight.Graphics.Transformable`1.SetModel
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_SetModel_System_Numerics_Matrix4x4_
  name: SetModel
  nameWithType: Transformable<T>.SetModel
  fullName: RedLight.Graphics.Transformable<T>.SetModel
  nameWithType.vb: Transformable(Of T).SetModel
  fullName.vb: RedLight.Graphics.Transformable(Of T).SetModel
- uid: RedLight.Graphics.Transformable`1.MakeTransformable*
  commentId: Overload:RedLight.Graphics.Transformable`1.MakeTransformable
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_MakeTransformable__0_
  name: MakeTransformable
  nameWithType: Transformable<T>.MakeTransformable
  fullName: RedLight.Graphics.Transformable<T>.MakeTransformable
  nameWithType.vb: Transformable(Of T).MakeTransformable
  fullName.vb: RedLight.Graphics.Transformable(Of T).MakeTransformable
- uid: RedLight.Graphics.ConcreteTransformable{{T}}
  commentId: T:RedLight.Graphics.ConcreteTransformable{`0}
  parent: RedLight.Graphics
  definition: RedLight.Graphics.ConcreteTransformable`1
  href: RedLight.Graphics.ConcreteTransformable-1.html
  name: ConcreteTransformable<T>
  nameWithType: ConcreteTransformable<T>
  fullName: RedLight.Graphics.ConcreteTransformable<T>
  nameWithType.vb: ConcreteTransformable(Of T)
  fullName.vb: RedLight.Graphics.ConcreteTransformable(Of T)
  name.vb: ConcreteTransformable(Of T)
  spec.csharp:
  - uid: RedLight.Graphics.ConcreteTransformable`1
    name: ConcreteTransformable
    href: RedLight.Graphics.ConcreteTransformable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.ConcreteTransformable`1
    name: ConcreteTransformable
    href: RedLight.Graphics.ConcreteTransformable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RedLight.Graphics.ConcreteTransformable`1
  commentId: T:RedLight.Graphics.ConcreteTransformable`1
  href: RedLight.Graphics.ConcreteTransformable-1.html
  name: ConcreteTransformable<T>
  nameWithType: ConcreteTransformable<T>
  fullName: RedLight.Graphics.ConcreteTransformable<T>
  nameWithType.vb: ConcreteTransformable(Of T)
  fullName.vb: RedLight.Graphics.ConcreteTransformable(Of T)
  name.vb: ConcreteTransformable(Of T)
  spec.csharp:
  - uid: RedLight.Graphics.ConcreteTransformable`1
    name: ConcreteTransformable
    href: RedLight.Graphics.ConcreteTransformable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.ConcreteTransformable`1
    name: ConcreteTransformable
    href: RedLight.Graphics.ConcreteTransformable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RedLight.Graphics.Transformable`1.Position*
  commentId: Overload:RedLight.Graphics.Transformable`1.Position
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Position
  name: Position
  nameWithType: Transformable<T>.Position
  fullName: RedLight.Graphics.Transformable<T>.Position
  nameWithType.vb: Transformable(Of T).Position
  fullName.vb: RedLight.Graphics.Transformable(Of T).Position
- uid: RedLight.Graphics.Transformable`1.Scale*
  commentId: Overload:RedLight.Graphics.Transformable`1.Scale
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Scale
  name: Scale
  nameWithType: Transformable<T>.Scale
  fullName: RedLight.Graphics.Transformable<T>.Scale
  nameWithType.vb: Transformable(Of T).Scale
  fullName.vb: RedLight.Graphics.Transformable(Of T).Scale
- uid: RedLight.Graphics.Transformable`1.Rotation*
  commentId: Overload:RedLight.Graphics.Transformable`1.Rotation
  href: RedLight.Graphics.Transformable-1.html#RedLight_Graphics_Transformable_1_Rotation
  name: Rotation
  nameWithType: Transformable<T>.Rotation
  fullName: RedLight.Graphics.Transformable<T>.Rotation
  nameWithType.vb: Transformable(Of T).Rotation
  fullName.vb: RedLight.Graphics.Transformable(Of T).Rotation
