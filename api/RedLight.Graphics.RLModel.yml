### YamlMime:ManagedReference
items:
- uid: RedLight.Graphics.RLModel
  commentId: T:RedLight.Graphics.RLModel
  id: RLModel
  parent: RedLight.Graphics
  children:
  - RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager)
  - RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager,System.String)
  - RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,System.String)
  - RedLight.Graphics.RLModel.ApplyTextureOverride(System.String,RedLight.Graphics.RLTexture)
  - RedLight.Graphics.RLModel.AttachShader(RedLight.Graphics.RLShaderBundle)
  - RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture)
  - RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture,System.Boolean)
  - RedLight.Graphics.RLModel.AttachedShader
  - RedLight.Graphics.RLModel.Directory
  - RedLight.Graphics.RLModel.Draw
  - RedLight.Graphics.RLModel.MakeTransformable
  - RedLight.Graphics.RLModel.Meshes
  - RedLight.Graphics.RLModel.Name
  - RedLight.Graphics.RLModel.ResourcePath
  - RedLight.Graphics.RLModel.SetColour(System.Drawing.Color)
  langs:
  - csharp
  - vb
  name: RLModel
  nameWithType: RLModel
  fullName: RedLight.Graphics.RLModel
  type: Class
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: RLModel
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 13
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Represents a 3D model loaded from a file using Assimp.

    Handles loading, processing, and rendering of 3D models with materials and textures.
  example: []
  syntax:
    content: public class RLModel
    content.vb: Public Class RLModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - RedLight.Graphics.RLModel.RedLight.Graphics.TransformableExtensions.MakeTransformable
- uid: RedLight.Graphics.RLModel.AttachedShader
  commentId: P:RedLight.Graphics.RLModel.AttachedShader
  id: AttachedShader
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: AttachedShader
  nameWithType: RLModel.AttachedShader
  fullName: RedLight.Graphics.RLModel.AttachedShader
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachedShader
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 21
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public RLShaderBundle AttachedShader { get; }
    parameters: []
    return:
      type: RedLight.Graphics.RLShaderBundle
    content.vb: Public Property AttachedShader As RLShaderBundle
  overload: RedLight.Graphics.RLModel.AttachedShader*
- uid: RedLight.Graphics.RLModel.Directory
  commentId: P:RedLight.Graphics.RLModel.Directory
  id: Directory
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: RLModel.Directory
  fullName: RedLight.Graphics.RLModel.Directory
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Directory
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 26
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Gets the directory path where the model file is located.
  example: []
  syntax:
    content: public string Directory { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Directory As String
  overload: RedLight.Graphics.RLModel.Directory*
- uid: RedLight.Graphics.RLModel.ResourcePath
  commentId: P:RedLight.Graphics.RLModel.ResourcePath
  id: ResourcePath
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: ResourcePath
  nameWithType: RLModel.ResourcePath
  fullName: RedLight.Graphics.RLModel.ResourcePath
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: ResourcePath
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 31
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Gets the resource path used to load the model.
  example: []
  syntax:
    content: public string ResourcePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ResourcePath As String
  overload: RedLight.Graphics.RLModel.ResourcePath*
- uid: RedLight.Graphics.RLModel.Meshes
  commentId: P:RedLight.Graphics.RLModel.Meshes
  id: Meshes
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: Meshes
  nameWithType: RLModel.Meshes
  fullName: RedLight.Graphics.RLModel.Meshes
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Meshes
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 36
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Gets the collection of meshes that make up this model.
  example: []
  syntax:
    content: public List<Mesh> Meshes { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RedLight.Graphics.Mesh}
    content.vb: Public Property Meshes As List(Of Mesh)
  overload: RedLight.Graphics.RLModel.Meshes*
- uid: RedLight.Graphics.RLModel.Name
  commentId: P:RedLight.Graphics.RLModel.Name
  id: Name
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RLModel.Name
  fullName: RedLight.Graphics.RLModel.Name
  type: Property
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Name
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 41
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Gets the name identifier of this model.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RedLight.Graphics.RLModel.Name*
- uid: RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager,System.String)
  commentId: M:RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager,System.String)
  id: '#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager,System.String)'
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: RLModel(RLGraphics, string, TextureManager, string)
  nameWithType: RLModel.RLModel(RLGraphics, string, TextureManager, string)
  fullName: RedLight.Graphics.RLModel.RLModel(RedLight.Graphics.RLGraphics, string, RedLight.Graphics.TextureManager, string)
  type: Constructor
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 52
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Initialises a new instance of the RLModel class with a specified name.
  example: []
  syntax:
    content: public RLModel(RLGraphics graphics, string path, TextureManager textureManager, string name)
    parameters:
    - id: graphics
      type: RedLight.Graphics.RLGraphics
      description: The graphics context to use for rendering.
    - id: path
      type: System.String
      description: The resource path to the model file.
    - id: textureManager
      type: RedLight.Graphics.TextureManager
      description: The texture manager to use for loading textures.
    - id: name
      type: System.String
      description: The name to assign to this model.
    content.vb: Public Sub New(graphics As RLGraphics, path As String, textureManager As TextureManager, name As String)
  overload: RedLight.Graphics.RLModel.#ctor*
  nameWithType.vb: RLModel.New(RLGraphics, String, TextureManager, String)
  fullName.vb: RedLight.Graphics.RLModel.New(RedLight.Graphics.RLGraphics, String, RedLight.Graphics.TextureManager, String)
  name.vb: New(RLGraphics, String, TextureManager, String)
- uid: RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,System.String)
  commentId: M:RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,System.String)
  id: '#ctor(RedLight.Graphics.RLGraphics,System.String,System.String)'
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: RLModel(RLGraphics, string, string)
  nameWithType: RLModel.RLModel(RLGraphics, string, string)
  fullName: RedLight.Graphics.RLModel.RLModel(RedLight.Graphics.RLGraphics, string, string)
  type: Constructor
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 73
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public RLModel(RLGraphics graphics, string path, string name)
    parameters:
    - id: graphics
      type: RedLight.Graphics.RLGraphics
    - id: path
      type: System.String
    - id: name
      type: System.String
    content.vb: Public Sub New(graphics As RLGraphics, path As String, name As String)
  overload: RedLight.Graphics.RLModel.#ctor*
  nameWithType.vb: RLModel.New(RLGraphics, String, String)
  fullName.vb: RedLight.Graphics.RLModel.New(RedLight.Graphics.RLGraphics, String, String)
  name.vb: New(RLGraphics, String, String)
- uid: RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager)
  commentId: M:RedLight.Graphics.RLModel.#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager)
  id: '#ctor(RedLight.Graphics.RLGraphics,System.String,RedLight.Graphics.TextureManager)'
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: RLModel(RLGraphics, string, TextureManager)
  nameWithType: RLModel.RLModel(RLGraphics, string, TextureManager)
  fullName: RedLight.Graphics.RLModel.RLModel(RedLight.Graphics.RLGraphics, string, RedLight.Graphics.TextureManager)
  type: Constructor
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 84
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Initializes a new instance of the RLModel class.

    Uses an empty string as the model name.
  example: []
  syntax:
    content: public RLModel(RLGraphics graphics, string path, TextureManager textureManager)
    parameters:
    - id: graphics
      type: RedLight.Graphics.RLGraphics
      description: The graphics context to use for rendering.
    - id: path
      type: System.String
      description: The resource path to the model file.
    - id: textureManager
      type: RedLight.Graphics.TextureManager
      description: The texture manager to use for loading textures.
    content.vb: Public Sub New(graphics As RLGraphics, path As String, textureManager As TextureManager)
  overload: RedLight.Graphics.RLModel.#ctor*
  nameWithType.vb: RLModel.New(RLGraphics, String, TextureManager)
  fullName.vb: RedLight.Graphics.RLModel.New(RedLight.Graphics.RLGraphics, String, RedLight.Graphics.TextureManager)
  name.vb: New(RLGraphics, String, TextureManager)
- uid: RedLight.Graphics.RLModel.MakeTransformable
  commentId: M:RedLight.Graphics.RLModel.MakeTransformable
  id: MakeTransformable
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: MakeTransformable()
  nameWithType: RLModel.MakeTransformable()
  fullName: RedLight.Graphics.RLModel.MakeTransformable()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: MakeTransformable
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 92
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Makes the model transformable, allowing manipulation of position, rotation, and scale.
  example: []
  syntax:
    content: public Transformable<RLModel> MakeTransformable()
    return:
      type: RedLight.Graphics.Transformable{RedLight.Graphics.RLModel}
      description: A transformable wrapper around this model.
    content.vb: Public Function MakeTransformable() As Transformable(Of RLModel)
  overload: RedLight.Graphics.RLModel.MakeTransformable*
- uid: RedLight.Graphics.RLModel.Draw
  commentId: M:RedLight.Graphics.RLModel.Draw
  id: Draw
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: RLModel.Draw()
  fullName: RedLight.Graphics.RLModel.Draw()
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Draw
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 116
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Renders the model by drawing all of its meshes.

    Requires a shader to be attached before calling.
  example: []
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: RedLight.Graphics.RLModel.Draw*
- uid: RedLight.Graphics.RLModel.ApplyTextureOverride(System.String,RedLight.Graphics.RLTexture)
  commentId: M:RedLight.Graphics.RLModel.ApplyTextureOverride(System.String,RedLight.Graphics.RLTexture)
  id: ApplyTextureOverride(System.String,RedLight.Graphics.RLTexture)
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: ApplyTextureOverride(string, RLTexture)
  nameWithType: RLModel.ApplyTextureOverride(string, RLTexture)
  fullName: RedLight.Graphics.RLModel.ApplyTextureOverride(string, RedLight.Graphics.RLTexture)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: ApplyTextureOverride
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 181
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Applies a texture override to a specific mesh in the model.

    Useful when a texture is not rendering properly from the original model.
  example: []
  syntax:
    content: public RLModel ApplyTextureOverride(string meshName, RLTexture texture)
    parameters:
    - id: meshName
      type: System.String
      description: The name or index of the mesh to apply the texture to.
    - id: texture
      type: RedLight.Graphics.RLTexture
      description: The texture to apply.
    return:
      type: RedLight.Graphics.RLModel
      description: This model instance for method chaining.
    content.vb: Public Function ApplyTextureOverride(meshName As String, texture As RLTexture) As RLModel
  overload: RedLight.Graphics.RLModel.ApplyTextureOverride*
  nameWithType.vb: RLModel.ApplyTextureOverride(String, RLTexture)
  fullName.vb: RedLight.Graphics.RLModel.ApplyTextureOverride(String, RedLight.Graphics.RLTexture)
  name.vb: ApplyTextureOverride(String, RLTexture)
- uid: RedLight.Graphics.RLModel.AttachShader(RedLight.Graphics.RLShaderBundle)
  commentId: M:RedLight.Graphics.RLModel.AttachShader(RedLight.Graphics.RLShaderBundle)
  id: AttachShader(RedLight.Graphics.RLShaderBundle)
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: AttachShader(RLShaderBundle)
  nameWithType: RLModel.AttachShader(RLShaderBundle)
  fullName: RedLight.Graphics.RLModel.AttachShader(RedLight.Graphics.RLShaderBundle)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachShader
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 234
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: >-
    Attaches a shader to all meshes in the model.

    Required before rendering the model.
  example: []
  syntax:
    content: public RLModel AttachShader(RLShaderBundle shaderBundle)
    parameters:
    - id: shaderBundle
      type: RedLight.Graphics.RLShaderBundle
      description: The shader bundle to attach.
    return:
      type: RedLight.Graphics.RLModel
      description: This model instance for method chaining.
    content.vb: Public Function AttachShader(shaderBundle As RLShaderBundle) As RLModel
  overload: RedLight.Graphics.RLModel.AttachShader*
- uid: RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture,System.Boolean)
  commentId: M:RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture,System.Boolean)
  id: AttachTexture(RedLight.Graphics.RLTexture,System.Boolean)
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: AttachTexture(RLTexture, bool)
  nameWithType: RLModel.AttachTexture(RLTexture, bool)
  fullName: RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture, bool)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachTexture
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 252
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Attaches a texture to all meshes in the model.
  example: []
  syntax:
    content: public RLModel AttachTexture(RLTexture texture, bool silent)
    parameters:
    - id: texture
      type: RedLight.Graphics.RLTexture
      description: The texture to attach.
    - id: silent
      type: System.Boolean
      description: Whether to suppress logging.
    return:
      type: RedLight.Graphics.RLModel
      description: This model instance for method chaining.
    content.vb: Public Function AttachTexture(texture As RLTexture, silent As Boolean) As RLModel
  overload: RedLight.Graphics.RLModel.AttachTexture*
  nameWithType.vb: RLModel.AttachTexture(RLTexture, Boolean)
  fullName.vb: RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture, Boolean)
  name.vb: AttachTexture(RLTexture, Boolean)
- uid: RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture)
  commentId: M:RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture)
  id: AttachTexture(RedLight.Graphics.RLTexture)
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: AttachTexture(RLTexture)
  nameWithType: RLModel.AttachTexture(RLTexture)
  fullName: RedLight.Graphics.RLModel.AttachTexture(RedLight.Graphics.RLTexture)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AttachTexture
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 284
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  summary: Attaches a texture to all meshes in the model with logging enabled.
  example: []
  syntax:
    content: public RLModel AttachTexture(RLTexture texture)
    parameters:
    - id: texture
      type: RedLight.Graphics.RLTexture
      description: The texture to attach.
    return:
      type: RedLight.Graphics.RLModel
      description: This model instance for method chaining.
    content.vb: Public Function AttachTexture(texture As RLTexture) As RLModel
  overload: RedLight.Graphics.RLModel.AttachTexture*
- uid: RedLight.Graphics.RLModel.SetColour(System.Drawing.Color)
  commentId: M:RedLight.Graphics.RLModel.SetColour(System.Drawing.Color)
  id: SetColour(System.Drawing.Color)
  parent: RedLight.Graphics.RLModel
  langs:
  - csharp
  - vb
  name: SetColour(Color)
  nameWithType: RLModel.SetColour(Color)
  fullName: RedLight.Graphics.RLModel.SetColour(System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/RedLight/Graphics/RLModel.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: SetColour
    path: src/RedLight/Graphics/RLModel.cs
    startLine: 289
  assemblies:
  - RedLight
  namespace: RedLight.Graphics
  syntax:
    content: public RLModel SetColour(Color colour)
    parameters:
    - id: colour
      type: System.Drawing.Color
    return:
      type: RedLight.Graphics.RLModel
    content.vb: Public Function SetColour(colour As Color) As RLModel
  overload: RedLight.Graphics.RLModel.SetColour*
references:
- uid: RedLight.Graphics
  commentId: N:RedLight.Graphics
  href: RedLight.html
  name: RedLight.Graphics
  nameWithType: RedLight.Graphics
  fullName: RedLight.Graphics
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Graphics
    name: Graphics
    href: RedLight.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RedLight.Graphics.RLModel.RedLight.Graphics.TransformableExtensions.MakeTransformable
  commentId: M:RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  parent: RedLight.Graphics.TransformableExtensions
  definition: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  name: MakeTransformable(RLModel)
  nameWithType: TransformableExtensions.MakeTransformable(RLModel)
  fullName: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  spec.csharp:
  - uid: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
    name: MakeTransformable
    href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  - name: (
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: )
  spec.vb:
  - uid: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
    name: MakeTransformable
    href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  - name: (
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  commentId: M:RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  name: MakeTransformable(RLModel)
  nameWithType: TransformableExtensions.MakeTransformable(RLModel)
  fullName: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
  spec.csharp:
  - uid: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
    name: MakeTransformable
    href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  - name: (
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: )
  spec.vb:
  - uid: RedLight.Graphics.TransformableExtensions.MakeTransformable(RedLight.Graphics.RLModel)
    name: MakeTransformable
    href: RedLight.Graphics.TransformableExtensions.html#RedLight_Graphics_TransformableExtensions_MakeTransformable_RedLight_Graphics_RLModel_
  - name: (
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: )
- uid: RedLight.Graphics.TransformableExtensions
  commentId: T:RedLight.Graphics.TransformableExtensions
  parent: RedLight.Graphics
  href: RedLight.Graphics.TransformableExtensions.html
  name: TransformableExtensions
  nameWithType: TransformableExtensions
  fullName: RedLight.Graphics.TransformableExtensions
- uid: RedLight.Graphics.RLModel.AttachedShader*
  commentId: Overload:RedLight.Graphics.RLModel.AttachedShader
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_AttachedShader
  name: AttachedShader
  nameWithType: RLModel.AttachedShader
  fullName: RedLight.Graphics.RLModel.AttachedShader
- uid: RedLight.Graphics.RLShaderBundle
  commentId: T:RedLight.Graphics.RLShaderBundle
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLShaderBundle.html
  name: RLShaderBundle
  nameWithType: RLShaderBundle
  fullName: RedLight.Graphics.RLShaderBundle
- uid: RedLight.Graphics.RLModel.Directory*
  commentId: Overload:RedLight.Graphics.RLModel.Directory
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_Directory
  name: Directory
  nameWithType: RLModel.Directory
  fullName: RedLight.Graphics.RLModel.Directory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RedLight.Graphics.RLModel.ResourcePath*
  commentId: Overload:RedLight.Graphics.RLModel.ResourcePath
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_ResourcePath
  name: ResourcePath
  nameWithType: RLModel.ResourcePath
  fullName: RedLight.Graphics.RLModel.ResourcePath
- uid: RedLight.Graphics.RLModel.Meshes*
  commentId: Overload:RedLight.Graphics.RLModel.Meshes
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_Meshes
  name: Meshes
  nameWithType: RLModel.Meshes
  fullName: RedLight.Graphics.RLModel.Meshes
- uid: System.Collections.Generic.List{RedLight.Graphics.Mesh}
  commentId: T:System.Collections.Generic.List{RedLight.Graphics.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<RedLight.Graphics.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of RedLight.Graphics.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RedLight.Graphics.Mesh
    name: Mesh
    href: RedLight.Graphics.Mesh.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RedLight.Graphics.Mesh
    name: Mesh
    href: RedLight.Graphics.Mesh.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RedLight.Graphics.RLModel.Name*
  commentId: Overload:RedLight.Graphics.RLModel.Name
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_Name
  name: Name
  nameWithType: RLModel.Name
  fullName: RedLight.Graphics.RLModel.Name
- uid: RedLight.Graphics.RLModel.#ctor*
  commentId: Overload:RedLight.Graphics.RLModel.#ctor
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel__ctor_RedLight_Graphics_RLGraphics_System_String_RedLight_Graphics_TextureManager_System_String_
  name: RLModel
  nameWithType: RLModel.RLModel
  fullName: RedLight.Graphics.RLModel.RLModel
  nameWithType.vb: RLModel.New
  fullName.vb: RedLight.Graphics.RLModel.New
  name.vb: New
- uid: RedLight.Graphics.RLGraphics
  commentId: T:RedLight.Graphics.RLGraphics
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLGraphics.html
  name: RLGraphics
  nameWithType: RLGraphics
  fullName: RedLight.Graphics.RLGraphics
- uid: RedLight.Graphics.TextureManager
  commentId: T:RedLight.Graphics.TextureManager
  parent: RedLight.Graphics
  href: RedLight.Graphics.TextureManager.html
  name: TextureManager
  nameWithType: TextureManager
  fullName: RedLight.Graphics.TextureManager
- uid: RedLight.Graphics.RLModel.MakeTransformable*
  commentId: Overload:RedLight.Graphics.RLModel.MakeTransformable
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_MakeTransformable
  name: MakeTransformable
  nameWithType: RLModel.MakeTransformable
  fullName: RedLight.Graphics.RLModel.MakeTransformable
- uid: RedLight.Graphics.Transformable{RedLight.Graphics.RLModel}
  commentId: T:RedLight.Graphics.Transformable{RedLight.Graphics.RLModel}
  parent: RedLight.Graphics
  definition: RedLight.Graphics.Transformable`1
  href: RedLight.Graphics.Transformable-1.html
  name: Transformable<RLModel>
  nameWithType: Transformable<RLModel>
  fullName: RedLight.Graphics.Transformable<RedLight.Graphics.RLModel>
  nameWithType.vb: Transformable(Of RLModel)
  fullName.vb: RedLight.Graphics.Transformable(Of RedLight.Graphics.RLModel)
  name.vb: Transformable(Of RLModel)
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: <
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: RedLight.Graphics.RLModel
    name: RLModel
    href: RedLight.Graphics.RLModel.html
  - name: )
- uid: RedLight.Graphics.Transformable`1
  commentId: T:RedLight.Graphics.Transformable`1
  parent: RedLight.Graphics
  href: RedLight.Graphics.Transformable-1.html
  name: Transformable<T>
  nameWithType: Transformable<T>
  fullName: RedLight.Graphics.Transformable<T>
  nameWithType.vb: Transformable(Of T)
  fullName.vb: RedLight.Graphics.Transformable(Of T)
  name.vb: Transformable(Of T)
  spec.csharp:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RedLight.Graphics.Transformable`1
    name: Transformable
    href: RedLight.Graphics.Transformable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RedLight.Graphics.RLModel.Draw*
  commentId: Overload:RedLight.Graphics.RLModel.Draw
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_Draw
  name: Draw
  nameWithType: RLModel.Draw
  fullName: RedLight.Graphics.RLModel.Draw
- uid: RedLight.Graphics.RLModel.ApplyTextureOverride*
  commentId: Overload:RedLight.Graphics.RLModel.ApplyTextureOverride
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_ApplyTextureOverride_System_String_RedLight_Graphics_RLTexture_
  name: ApplyTextureOverride
  nameWithType: RLModel.ApplyTextureOverride
  fullName: RedLight.Graphics.RLModel.ApplyTextureOverride
- uid: RedLight.Graphics.RLTexture
  commentId: T:RedLight.Graphics.RLTexture
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLTexture.html
  name: RLTexture
  nameWithType: RLTexture
  fullName: RedLight.Graphics.RLTexture
- uid: RedLight.Graphics.RLModel
  commentId: T:RedLight.Graphics.RLModel
  parent: RedLight.Graphics
  href: RedLight.Graphics.RLModel.html
  name: RLModel
  nameWithType: RLModel
  fullName: RedLight.Graphics.RLModel
- uid: RedLight.Graphics.RLModel.AttachShader*
  commentId: Overload:RedLight.Graphics.RLModel.AttachShader
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_AttachShader_RedLight_Graphics_RLShaderBundle_
  name: AttachShader
  nameWithType: RLModel.AttachShader
  fullName: RedLight.Graphics.RLModel.AttachShader
- uid: RedLight.Graphics.RLModel.AttachTexture*
  commentId: Overload:RedLight.Graphics.RLModel.AttachTexture
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_AttachTexture_RedLight_Graphics_RLTexture_System_Boolean_
  name: AttachTexture
  nameWithType: RLModel.AttachTexture
  fullName: RedLight.Graphics.RLModel.AttachTexture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RedLight.Graphics.RLModel.SetColour*
  commentId: Overload:RedLight.Graphics.RLModel.SetColour
  href: RedLight.Graphics.RLModel.html#RedLight_Graphics_RLModel_SetColour_System_Drawing_Color_
  name: SetColour
  nameWithType: RLModel.SetColour
  fullName: RedLight.Graphics.RLModel.SetColour
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
