### YamlMime:ManagedReference
items:
- uid: RedLight.Physics.PoseIntegratorCallbacks
  commentId: T:RedLight.Physics.PoseIntegratorCallbacks
  id: PoseIntegratorCallbacks
  parent: RedLight.Physics
  children:
  - RedLight.Physics.PoseIntegratorCallbacks.#ctor(System.Numerics.Vector3)
  - RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  - RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
  - RedLight.Physics.PoseIntegratorCallbacks.Gravity
  - RedLight.Physics.PoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  - RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  - RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  - RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  - RedLight.Physics.PoseIntegratorCallbacks.dt
  langs:
  - csharp
  - vb
  name: PoseIntegratorCallbacks
  nameWithType: PoseIntegratorCallbacks
  fullName: RedLight.Physics.PoseIntegratorCallbacks
  type: Struct
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: PoseIntegratorCallbacks
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 303
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  syntax:
    content: 'public struct PoseIntegratorCallbacks : IPoseIntegratorCallbacks'
    content.vb: Public Structure PoseIntegratorCallbacks Implements IPoseIntegratorCallbacks
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: RedLight.Physics.PoseIntegratorCallbacks.Gravity
  commentId: F:RedLight.Physics.PoseIntegratorCallbacks.Gravity
  id: Gravity
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: PoseIntegratorCallbacks.Gravity
  fullName: RedLight.Physics.PoseIntegratorCallbacks.Gravity
  type: Field
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Gravity
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 305
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  syntax:
    content: public Vector3 Gravity
    return:
      type: System.Numerics.Vector3
    content.vb: Public Gravity As Vector3
- uid: RedLight.Physics.PoseIntegratorCallbacks.dt
  commentId: F:RedLight.Physics.PoseIntegratorCallbacks.dt
  id: dt
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: dt
  nameWithType: PoseIntegratorCallbacks.dt
  fullName: RedLight.Physics.PoseIntegratorCallbacks.dt
  type: Field
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: dt
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 306
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  syntax:
    content: public float dt
    return:
      type: System.Single
    content.vb: Public dt As Single
- uid: RedLight.Physics.PoseIntegratorCallbacks.#ctor(System.Numerics.Vector3)
  commentId: M:RedLight.Physics.PoseIntegratorCallbacks.#ctor(System.Numerics.Vector3)
  id: '#ctor(System.Numerics.Vector3)'
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: PoseIntegratorCallbacks(Vector3)
  nameWithType: PoseIntegratorCallbacks.PoseIntegratorCallbacks(Vector3)
  fullName: RedLight.Physics.PoseIntegratorCallbacks.PoseIntegratorCallbacks(System.Numerics.Vector3)
  type: Constructor
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: .ctor
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 308
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  syntax:
    content: public PoseIntegratorCallbacks(Vector3 gravity)
    parameters:
    - id: gravity
      type: System.Numerics.Vector3
    content.vb: Public Sub New(gravity As Vector3)
  overload: RedLight.Physics.PoseIntegratorCallbacks.#ctor*
  nameWithType.vb: PoseIntegratorCallbacks.New(Vector3)
  fullName.vb: RedLight.Physics.PoseIntegratorCallbacks.New(System.Numerics.Vector3)
  name.vb: New(Vector3)
- uid: RedLight.Physics.PoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  commentId: M:RedLight.Physics.PoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  id: Initialize(BepuPhysics.Simulation)
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: Initialize(Simulation)
  nameWithType: PoseIntegratorCallbacks.Initialize(Simulation)
  fullName: RedLight.Physics.PoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  type: Method
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: Initialize
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 314
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: Performs any required initialization logic after the Simulation instance has been constructed.
  example: []
  syntax:
    content: public void Initialize(Simulation simulation)
    parameters:
    - id: simulation
      type: BepuPhysics.Simulation
      description: Simulation that owns these callbacks.
    content.vb: Public Sub Initialize(simulation As Simulation)
  overload: RedLight.Physics.PoseIntegratorCallbacks.Initialize*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
- uid: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  commentId: M:RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  id: PrepareForIntegration(System.Single)
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: PrepareForIntegration(float)
  nameWithType: PoseIntegratorCallbacks.PrepareForIntegration(float)
  fullName: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration(float)
  type: Method
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: PrepareForIntegration
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 316
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: >-
    Callback invoked ahead of dispatches that may call into <xref href="BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector%7bSystem.Int32%7d%2cBepuUtilities.Vector3Wide%2cBepuUtilities.QuaternionWide%2cBepuPhysics.BodyInertiaWide%2cSystem.Numerics.Vector%7bSystem.Int32%7d%2cSystem.Int32%2cSystem.Numerics.Vector%7bSystem.Single%7d%2cBepuPhysics.BodyVelocityWide%40)" data-throw-if-not-resolved="false"></xref>.

    It may be called more than once with different values over a frame. For example, when performing bounding box prediction, velocity is integrated with a full frame time step duration.

    During substepped solves, integration is split into substepCount steps, each with fullFrameDuration / substepCount duration.

    The final integration pass for unconstrained bodies may be either fullFrameDuration or fullFrameDuration / substepCount, depending on the value of AllowSubstepsForUnconstrainedBodies.
  remarks: This is typically used for precomputing anything expensive that will be used across velocity integration.
  example: []
  syntax:
    content: public void PrepareForIntegration(float deltaTime)
    parameters:
    - id: deltaTime
      type: System.Single
    content.vb: Public Sub PrepareForIntegration(deltaTime As Single)
  overload: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  nameWithType.vb: PoseIntegratorCallbacks.PrepareForIntegration(Single)
  fullName.vb: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration(Single)
  name.vb: PrepareForIntegration(Single)
- uid: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  commentId: M:RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  id: IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: IntegrateVelocity(Vector<int>, Vector3Wide, QuaternionWide, BodyInertiaWide, Vector<int>, int, Vector<float>, ref BodyVelocityWide)
  nameWithType: PoseIntegratorCallbacks.IntegrateVelocity(Vector<int>, Vector3Wide, QuaternionWide, BodyInertiaWide, Vector<int>, int, Vector<float>, ref BodyVelocityWide)
  fullName: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector<int>, BepuUtilities.Vector3Wide, BepuUtilities.QuaternionWide, BepuPhysics.BodyInertiaWide, System.Numerics.Vector<int>, int, System.Numerics.Vector<float>, ref BepuPhysics.BodyVelocityWide)
  type: Method
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: IntegrateVelocity
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 321
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: Callback for a bundle of bodies being integrated.
  example: []
  syntax:
    content: public void IntegrateVelocity(Vector<int> bodyIndices, Vector3Wide position, QuaternionWide orientation, BodyInertiaWide localInertia, Vector<int> integrationMask, int workerIndex, Vector<float> dt, ref BodyVelocityWide velocity)
    parameters:
    - id: bodyIndices
      type: System.Numerics.Vector{System.Int32}
      description: Indices of the bodies being integrated in this bundle.
    - id: position
      type: BepuUtilities.Vector3Wide
      description: Current body positions.
    - id: orientation
      type: BepuUtilities.QuaternionWide
      description: Current body orientations.
    - id: localInertia
      type: BepuPhysics.BodyInertiaWide
      description: Body's current local inertia.
    - id: integrationMask
      type: System.Numerics.Vector{System.Int32}
      description: Mask indicating which lanes are active in the bundle. Active lanes will contain 0xFFFFFFFF, inactive lanes will contain 0.
    - id: workerIndex
      type: System.Int32
      description: Index of the worker thread processing this bundle.
    - id: dt
      type: System.Numerics.Vector{System.Single}
      description: Durations to integrate the velocity over. Can vary over lanes.
    - id: velocity
      type: BepuPhysics.BodyVelocityWide
      description: Velocity of bodies in the bundle. Any changes to lanes which are not active by the integrationMask will be discarded.
    content.vb: Public Sub IntegrateVelocity(bodyIndices As Vector(Of Integer), position As Vector3Wide, orientation As QuaternionWide, localInertia As BodyInertiaWide, integrationMask As Vector(Of Integer), workerIndex As Integer, dt As Vector(Of Single), velocity As BodyVelocityWide)
  overload: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  nameWithType.vb: PoseIntegratorCallbacks.IntegrateVelocity(Vector(Of Integer), Vector3Wide, QuaternionWide, BodyInertiaWide, Vector(Of Integer), Integer, Vector(Of Single), BodyVelocityWide)
  fullName.vb: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector(Of Integer), BepuUtilities.Vector3Wide, BepuUtilities.QuaternionWide, BepuPhysics.BodyInertiaWide, System.Numerics.Vector(Of Integer), Integer, System.Numerics.Vector(Of Single), BepuPhysics.BodyVelocityWide)
  name.vb: IntegrateVelocity(Vector(Of Integer), Vector3Wide, QuaternionWide, BodyInertiaWide, Vector(Of Integer), Integer, Vector(Of Single), BodyVelocityWide)
- uid: RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
  commentId: P:RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
  id: AngularIntegrationMode
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: AngularIntegrationMode
  nameWithType: PoseIntegratorCallbacks.AngularIntegrationMode
  fullName: RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
  type: Property
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AngularIntegrationMode
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 335
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: Gets how the pose integrator should handle angular velocity integration.
  example: []
  syntax:
    content: public AngularIntegrationMode AngularIntegrationMode { get; }
    parameters: []
    return:
      type: BepuPhysics.AngularIntegrationMode
    content.vb: Public ReadOnly Property AngularIntegrationMode As AngularIntegrationMode
  overload: RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.AngularIntegrationMode
- uid: RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  commentId: P:RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  id: AllowSubstepsForUnconstrainedBodies
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: AllowSubstepsForUnconstrainedBodies
  nameWithType: PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  fullName: RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  type: Property
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: AllowSubstepsForUnconstrainedBodies
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 337
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: >-
    Gets whether the integrator should use only one step for unconstrained bodies when using a substepping solver.

    If true, unconstrained bodies use a single step of length equal to the dt provided to <xref href="BepuPhysics.Simulation.Timestep(System.Single%2cBepuUtilities.IThreadDispatcher)" data-throw-if-not-resolved="false"></xref>. 

    If false, unconstrained bodies will be integrated with the same number of substeps as the constrained bodies in the solver.
  example: []
  syntax:
    content: public bool AllowSubstepsForUnconstrainedBodies { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowSubstepsForUnconstrainedBodies As Boolean
  overload: RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
- uid: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  commentId: P:RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  id: IntegrateVelocityForKinematics
  parent: RedLight.Physics.PoseIntegratorCallbacks
  langs:
  - csharp
  - vb
  name: IntegrateVelocityForKinematics
  nameWithType: PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  fullName: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  type: Property
  source:
    remote:
      path: src/RedLight/Physics/PhysicsSystem.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: IntegrateVelocityForKinematics
    path: src/RedLight/Physics/PhysicsSystem.cs
    startLine: 338
  assemblies:
  - RedLight
  namespace: RedLight.Physics
  summary: >-
    Gets whether the velocity integration callback should be called for kinematic bodies.

    If true, <xref href="BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector%7bSystem.Int32%7d%2cBepuUtilities.Vector3Wide%2cBepuUtilities.QuaternionWide%2cBepuPhysics.BodyInertiaWide%2cSystem.Numerics.Vector%7bSystem.Int32%7d%2cSystem.Int32%2cSystem.Numerics.Vector%7bSystem.Single%7d%2cBepuPhysics.BodyVelocityWide%40)" data-throw-if-not-resolved="false"></xref> will be called for bundles including kinematic bodies.

    If false, kinematic bodies will just continue using whatever velocity they have set.

    Most use cases should set this to false.
  example: []
  syntax:
    content: public bool IntegrateVelocityForKinematics { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IntegrateVelocityForKinematics As Boolean
  overload: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics*
  implements:
  - BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocityForKinematics
references:
- uid: RedLight.Physics
  commentId: N:RedLight.Physics
  href: RedLight.html
  name: RedLight.Physics
  nameWithType: RedLight.Physics
  fullName: RedLight.Physics
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Physics
    name: Physics
    href: RedLight.Physics.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Physics
    name: Physics
    href: RedLight.Physics.html
- uid: BepuPhysics.IPoseIntegratorCallbacks
  commentId: T:BepuPhysics.IPoseIntegratorCallbacks
  parent: BepuPhysics
  isExternal: true
  name: IPoseIntegratorCallbacks
  nameWithType: IPoseIntegratorCallbacks
  fullName: BepuPhysics.IPoseIntegratorCallbacks
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: BepuPhysics
  commentId: N:BepuPhysics
  isExternal: true
  name: BepuPhysics
  nameWithType: BepuPhysics
  fullName: BepuPhysics
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RedLight.Physics.PoseIntegratorCallbacks.#ctor*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.#ctor
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks__ctor_System_Numerics_Vector3_
  name: PoseIntegratorCallbacks
  nameWithType: PoseIntegratorCallbacks.PoseIntegratorCallbacks
  fullName: RedLight.Physics.PoseIntegratorCallbacks.PoseIntegratorCallbacks
  nameWithType.vb: PoseIntegratorCallbacks.New
  fullName.vb: RedLight.Physics.PoseIntegratorCallbacks.New
  name.vb: New
- uid: RedLight.Physics.PoseIntegratorCallbacks.Initialize*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.Initialize
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_Initialize_BepuPhysics_Simulation_
  name: Initialize
  nameWithType: PoseIntegratorCallbacks.Initialize
  fullName: RedLight.Physics.PoseIntegratorCallbacks.Initialize
- uid: BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  commentId: M:BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  name: Initialize(Simulation)
  nameWithType: IPoseIntegratorCallbacks.Initialize(Simulation)
  fullName: BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
  spec.csharp:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
    name: Initialize
    isExternal: true
  - name: (
  - uid: BepuPhysics.Simulation
    name: Simulation
    isExternal: true
  - name: )
  spec.vb:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.Initialize(BepuPhysics.Simulation)
    name: Initialize
    isExternal: true
  - name: (
  - uid: BepuPhysics.Simulation
    name: Simulation
    isExternal: true
  - name: )
- uid: BepuPhysics.Simulation
  commentId: T:BepuPhysics.Simulation
  parent: BepuPhysics
  isExternal: true
  name: Simulation
  nameWithType: Simulation
  fullName: BepuPhysics.Simulation
- uid: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  commentId: M:BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  name: IntegrateVelocity(Vector<int>, Vector3Wide, QuaternionWide, BodyInertiaWide, Vector<int>, int, Vector<float>, ref BodyVelocityWide)
  nameWithType: IPoseIntegratorCallbacks.IntegrateVelocity(Vector<int>, Vector3Wide, QuaternionWide, BodyInertiaWide, Vector<int>, int, Vector<float>, ref BodyVelocityWide)
  fullName: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector<int>, BepuUtilities.Vector3Wide, BepuUtilities.QuaternionWide, BepuPhysics.BodyInertiaWide, System.Numerics.Vector<int>, int, System.Numerics.Vector<float>, ref BepuPhysics.BodyVelocityWide)
  nameWithType.vb: IPoseIntegratorCallbacks.IntegrateVelocity(Vector(Of Integer), Vector3Wide, QuaternionWide, BodyInertiaWide, Vector(Of Integer), Integer, Vector(Of Single), BodyVelocityWide)
  fullName.vb: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector(Of Integer), BepuUtilities.Vector3Wide, BepuUtilities.QuaternionWide, BepuPhysics.BodyInertiaWide, System.Numerics.Vector(Of Integer), Integer, System.Numerics.Vector(Of Single), BepuPhysics.BodyVelocityWide)
  name.vb: IntegrateVelocity(Vector(Of Integer), Vector3Wide, QuaternionWide, BodyInertiaWide, Vector(Of Integer), Integer, Vector(Of Single), BodyVelocityWide)
  spec.csharp:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
    name: IntegrateVelocity
    isExternal: true
  - name: (
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: BepuUtilities.Vector3Wide
    name: Vector3Wide
    isExternal: true
  - name: ','
  - name: " "
  - uid: BepuUtilities.QuaternionWide
    name: QuaternionWide
    isExternal: true
  - name: ','
  - name: " "
  - uid: BepuPhysics.BodyInertiaWide
    name: BodyInertiaWide
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: BepuPhysics.BodyVelocityWide
    name: BodyVelocityWide
    isExternal: true
  - name: )
  spec.vb:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocity(System.Numerics.Vector{System.Int32},BepuUtilities.Vector3Wide,BepuUtilities.QuaternionWide,BepuPhysics.BodyInertiaWide,System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Single},BepuPhysics.BodyVelocityWide@)
    name: IntegrateVelocity
    isExternal: true
  - name: (
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: BepuUtilities.Vector3Wide
    name: Vector3Wide
    isExternal: true
  - name: ','
  - name: " "
  - uid: BepuUtilities.QuaternionWide
    name: QuaternionWide
    isExternal: true
  - name: ','
  - name: " "
  - uid: BepuPhysics.BodyInertiaWide
    name: BodyInertiaWide
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: BepuPhysics.BodyVelocityWide
    name: BodyVelocityWide
    isExternal: true
  - name: )
- uid: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_PrepareForIntegration_System_Single_
  name: PrepareForIntegration
  nameWithType: PoseIntegratorCallbacks.PrepareForIntegration
  fullName: RedLight.Physics.PoseIntegratorCallbacks.PrepareForIntegration
- uid: BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  commentId: M:BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(System.Single)
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: PrepareForIntegration(float)
  nameWithType: IPoseIntegratorCallbacks.PrepareForIntegration(float)
  fullName: BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(float)
  nameWithType.vb: IPoseIntegratorCallbacks.PrepareForIntegration(Single)
  fullName.vb: BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(Single)
  name.vb: PrepareForIntegration(Single)
  spec.csharp:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(System.Single)
    name: PrepareForIntegration
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: BepuPhysics.IPoseIntegratorCallbacks.PrepareForIntegration(System.Single)
    name: PrepareForIntegration
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_IntegrateVelocity_System_Numerics_Vector_System_Int32__BepuUtilities_Vector3Wide_BepuUtilities_QuaternionWide_BepuPhysics_BodyInertiaWide_System_Numerics_Vector_System_Int32__System_Int32_System_Numerics_Vector_System_Single__BepuPhysics_BodyVelocityWide__
  name: IntegrateVelocity
  nameWithType: PoseIntegratorCallbacks.IntegrateVelocity
  fullName: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocity
- uid: System.Numerics.Vector{System.Int32}
  commentId: T:System.Numerics.Vector{System.Int32}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  name: Vector<int>
  nameWithType: Vector<int>
  fullName: System.Numerics.Vector<int>
  nameWithType.vb: Vector(Of Integer)
  fullName.vb: System.Numerics.Vector(Of Integer)
  name.vb: Vector(Of Integer)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: BepuUtilities.Vector3Wide
  commentId: T:BepuUtilities.Vector3Wide
  parent: BepuUtilities
  isExternal: true
  name: Vector3Wide
  nameWithType: Vector3Wide
  fullName: BepuUtilities.Vector3Wide
- uid: BepuUtilities.QuaternionWide
  commentId: T:BepuUtilities.QuaternionWide
  parent: BepuUtilities
  isExternal: true
  name: QuaternionWide
  nameWithType: QuaternionWide
  fullName: BepuUtilities.QuaternionWide
- uid: BepuPhysics.BodyInertiaWide
  commentId: T:BepuPhysics.BodyInertiaWide
  parent: BepuPhysics
  isExternal: true
  name: BodyInertiaWide
  nameWithType: BodyInertiaWide
  fullName: BepuPhysics.BodyInertiaWide
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Numerics.Vector{System.Single}
  commentId: T:System.Numerics.Vector{System.Single}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  name: Vector<float>
  nameWithType: Vector<float>
  fullName: System.Numerics.Vector<float>
  nameWithType.vb: Vector(Of Single)
  fullName.vb: System.Numerics.Vector(Of Single)
  name.vb: Vector(Of Single)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: BepuPhysics.BodyVelocityWide
  commentId: T:BepuPhysics.BodyVelocityWide
  parent: BepuPhysics
  isExternal: true
  name: BodyVelocityWide
  nameWithType: BodyVelocityWide
  fullName: BepuPhysics.BodyVelocityWide
- uid: System.Numerics.Vector`1
  commentId: T:System.Numerics.Vector`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  name: Vector<T>
  nameWithType: Vector<T>
  fullName: System.Numerics.Vector<T>
  nameWithType.vb: Vector(Of T)
  fullName.vb: System.Numerics.Vector(Of T)
  name.vb: Vector(Of T)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BepuUtilities
  commentId: N:BepuUtilities
  isExternal: true
  name: BepuUtilities
  nameWithType: BepuUtilities
  fullName: BepuUtilities
- uid: RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_AngularIntegrationMode
  name: AngularIntegrationMode
  nameWithType: PoseIntegratorCallbacks.AngularIntegrationMode
  fullName: RedLight.Physics.PoseIntegratorCallbacks.AngularIntegrationMode
- uid: BepuPhysics.IPoseIntegratorCallbacks.AngularIntegrationMode
  commentId: P:BepuPhysics.IPoseIntegratorCallbacks.AngularIntegrationMode
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  name: AngularIntegrationMode
  nameWithType: IPoseIntegratorCallbacks.AngularIntegrationMode
  fullName: BepuPhysics.IPoseIntegratorCallbacks.AngularIntegrationMode
- uid: BepuPhysics.AngularIntegrationMode
  commentId: T:BepuPhysics.AngularIntegrationMode
  parent: BepuPhysics
  isExternal: true
  name: AngularIntegrationMode
  nameWithType: AngularIntegrationMode
  fullName: BepuPhysics.AngularIntegrationMode
- uid: BepuPhysics.Simulation.Timestep(System.Single,BepuUtilities.IThreadDispatcher)
  commentId: M:BepuPhysics.Simulation.Timestep(System.Single,BepuUtilities.IThreadDispatcher)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Timestep(float, IThreadDispatcher)
  nameWithType: Simulation.Timestep(float, IThreadDispatcher)
  fullName: BepuPhysics.Simulation.Timestep(float, BepuUtilities.IThreadDispatcher)
  nameWithType.vb: Simulation.Timestep(Single, IThreadDispatcher)
  fullName.vb: BepuPhysics.Simulation.Timestep(Single, BepuUtilities.IThreadDispatcher)
  name.vb: Timestep(Single, IThreadDispatcher)
  spec.csharp:
  - uid: BepuPhysics.Simulation.Timestep(System.Single,BepuUtilities.IThreadDispatcher)
    name: Timestep
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: BepuUtilities.IThreadDispatcher
    name: IThreadDispatcher
    isExternal: true
  - name: )
  spec.vb:
  - uid: BepuPhysics.Simulation.Timestep(System.Single,BepuUtilities.IThreadDispatcher)
    name: Timestep
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: BepuUtilities.IThreadDispatcher
    name: IThreadDispatcher
    isExternal: true
  - name: )
- uid: RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_AllowSubstepsForUnconstrainedBodies
  name: AllowSubstepsForUnconstrainedBodies
  nameWithType: PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  fullName: RedLight.Physics.PoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
- uid: BepuPhysics.IPoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  commentId: P:BepuPhysics.IPoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  name: AllowSubstepsForUnconstrainedBodies
  nameWithType: IPoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
  fullName: BepuPhysics.IPoseIntegratorCallbacks.AllowSubstepsForUnconstrainedBodies
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics*
  commentId: Overload:RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  href: RedLight.Physics.PoseIntegratorCallbacks.html#RedLight_Physics_PoseIntegratorCallbacks_IntegrateVelocityForKinematics
  name: IntegrateVelocityForKinematics
  nameWithType: PoseIntegratorCallbacks.IntegrateVelocityForKinematics
  fullName: RedLight.Physics.PoseIntegratorCallbacks.IntegrateVelocityForKinematics
- uid: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocityForKinematics
  commentId: P:BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocityForKinematics
  parent: BepuPhysics.IPoseIntegratorCallbacks
  isExternal: true
  name: IntegrateVelocityForKinematics
  nameWithType: IPoseIntegratorCallbacks.IntegrateVelocityForKinematics
  fullName: BepuPhysics.IPoseIntegratorCallbacks.IntegrateVelocityForKinematics
