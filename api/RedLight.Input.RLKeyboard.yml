### YamlMime:ManagedReference
items:
- uid: RedLight.Input.RLKeyboard
  commentId: T:RedLight.Input.RLKeyboard
  id: RLKeyboard
  parent: RedLight.Input
  children:
  - RedLight.Input.RLKeyboard.OnKeyDown(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  - RedLight.Input.RLKeyboard.OnKeyUp(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  - RedLight.Input.RLKeyboard.PressedKeys
  langs:
  - csharp
  - vb
  name: RLKeyboard
  nameWithType: RLKeyboard
  fullName: RedLight.Input.RLKeyboard
  type: Interface
  source:
    remote:
      path: src/RedLight/Input/RLKeyboard.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: RLKeyboard
    path: src/RedLight/Input/RLKeyboard.cs
    startLine: 4
  assemblies:
  - RedLight
  namespace: RedLight.Input
  syntax:
    content: public interface RLKeyboard
    content.vb: Public Interface RLKeyboard
- uid: RedLight.Input.RLKeyboard.PressedKeys
  commentId: P:RedLight.Input.RLKeyboard.PressedKeys
  id: PressedKeys
  parent: RedLight.Input.RLKeyboard
  langs:
  - csharp
  - vb
  name: PressedKeys
  nameWithType: RLKeyboard.PressedKeys
  fullName: RedLight.Input.RLKeyboard.PressedKeys
  type: Property
  source:
    remote:
      path: src/RedLight/Input/RLKeyboard.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: PressedKeys
    path: src/RedLight/Input/RLKeyboard.cs
    startLine: 6
  assemblies:
  - RedLight
  namespace: RedLight.Input
  syntax:
    content: HashSet<Key> PressedKeys { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Silk.NET.Input.Key}
    content.vb: Property PressedKeys As HashSet(Of Key)
  overload: RedLight.Input.RLKeyboard.PressedKeys*
- uid: RedLight.Input.RLKeyboard.OnKeyDown(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  commentId: M:RedLight.Input.RLKeyboard.OnKeyDown(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  id: OnKeyDown(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  parent: RedLight.Input.RLKeyboard
  langs:
  - csharp
  - vb
  name: OnKeyDown(IKeyboard, Key, int)
  nameWithType: RLKeyboard.OnKeyDown(IKeyboard, Key, int)
  fullName: RedLight.Input.RLKeyboard.OnKeyDown(Silk.NET.Input.IKeyboard, Silk.NET.Input.Key, int)
  type: Method
  source:
    remote:
      path: src/RedLight/Input/RLKeyboard.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: OnKeyDown
    path: src/RedLight/Input/RLKeyboard.cs
    startLine: 8
  assemblies:
  - RedLight
  namespace: RedLight.Input
  syntax:
    content: void OnKeyDown(IKeyboard keyboard, Key key, int keyCode)
    parameters:
    - id: keyboard
      type: Silk.NET.Input.IKeyboard
    - id: key
      type: Silk.NET.Input.Key
    - id: keyCode
      type: System.Int32
    content.vb: Sub OnKeyDown(keyboard As IKeyboard, key As Key, keyCode As Integer)
  overload: RedLight.Input.RLKeyboard.OnKeyDown*
  nameWithType.vb: RLKeyboard.OnKeyDown(IKeyboard, Key, Integer)
  fullName.vb: RedLight.Input.RLKeyboard.OnKeyDown(Silk.NET.Input.IKeyboard, Silk.NET.Input.Key, Integer)
  name.vb: OnKeyDown(IKeyboard, Key, Integer)
- uid: RedLight.Input.RLKeyboard.OnKeyUp(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  commentId: M:RedLight.Input.RLKeyboard.OnKeyUp(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  id: OnKeyUp(Silk.NET.Input.IKeyboard,Silk.NET.Input.Key,System.Int32)
  parent: RedLight.Input.RLKeyboard
  langs:
  - csharp
  - vb
  name: OnKeyUp(IKeyboard, Key, int)
  nameWithType: RLKeyboard.OnKeyUp(IKeyboard, Key, int)
  fullName: RedLight.Input.RLKeyboard.OnKeyUp(Silk.NET.Input.IKeyboard, Silk.NET.Input.Key, int)
  type: Method
  source:
    remote:
      path: src/RedLight/Input/RLKeyboard.cs
      branch: main
      repo: git@github.com:4tkbytes/RedLight
    id: OnKeyUp
    path: src/RedLight/Input/RLKeyboard.cs
    startLine: 12
  assemblies:
  - RedLight
  namespace: RedLight.Input
  syntax:
    content: void OnKeyUp(IKeyboard keyboard, Key key, int keyCode)
    parameters:
    - id: keyboard
      type: Silk.NET.Input.IKeyboard
    - id: key
      type: Silk.NET.Input.Key
    - id: keyCode
      type: System.Int32
    content.vb: Sub OnKeyUp(keyboard As IKeyboard, key As Key, keyCode As Integer)
  overload: RedLight.Input.RLKeyboard.OnKeyUp*
  nameWithType.vb: RLKeyboard.OnKeyUp(IKeyboard, Key, Integer)
  fullName.vb: RedLight.Input.RLKeyboard.OnKeyUp(Silk.NET.Input.IKeyboard, Silk.NET.Input.Key, Integer)
  name.vb: OnKeyUp(IKeyboard, Key, Integer)
references:
- uid: RedLight.Input
  commentId: N:RedLight.Input
  href: RedLight.html
  name: RedLight.Input
  nameWithType: RedLight.Input
  fullName: RedLight.Input
  spec.csharp:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Input
    name: Input
    href: RedLight.Input.html
  spec.vb:
  - uid: RedLight
    name: RedLight
    href: RedLight.html
  - name: .
  - uid: RedLight.Input
    name: Input
    href: RedLight.Input.html
- uid: RedLight.Input.RLKeyboard.PressedKeys*
  commentId: Overload:RedLight.Input.RLKeyboard.PressedKeys
  href: RedLight.Input.RLKeyboard.html#RedLight_Input_RLKeyboard_PressedKeys
  name: PressedKeys
  nameWithType: RLKeyboard.PressedKeys
  fullName: RedLight.Input.RLKeyboard.PressedKeys
- uid: System.Collections.Generic.HashSet{Silk.NET.Input.Key}
  commentId: T:System.Collections.Generic.HashSet{Silk.NET.Input.Key}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Key>
  nameWithType: HashSet<Key>
  fullName: System.Collections.Generic.HashSet<Silk.NET.Input.Key>
  nameWithType.vb: HashSet(Of Key)
  fullName.vb: System.Collections.Generic.HashSet(Of Silk.NET.Input.Key)
  name.vb: HashSet(Of Key)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Silk.NET.Input.Key
    name: Key
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Silk.NET.Input.Key
    name: Key
    isExternal: true
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RedLight.Input.RLKeyboard.OnKeyDown*
  commentId: Overload:RedLight.Input.RLKeyboard.OnKeyDown
  href: RedLight.Input.RLKeyboard.html#RedLight_Input_RLKeyboard_OnKeyDown_Silk_NET_Input_IKeyboard_Silk_NET_Input_Key_System_Int32_
  name: OnKeyDown
  nameWithType: RLKeyboard.OnKeyDown
  fullName: RedLight.Input.RLKeyboard.OnKeyDown
- uid: Silk.NET.Input.IKeyboard
  commentId: T:Silk.NET.Input.IKeyboard
  parent: Silk.NET.Input
  isExternal: true
  name: IKeyboard
  nameWithType: IKeyboard
  fullName: Silk.NET.Input.IKeyboard
- uid: Silk.NET.Input.Key
  commentId: T:Silk.NET.Input.Key
  parent: Silk.NET.Input
  isExternal: true
  name: Key
  nameWithType: Key
  fullName: Silk.NET.Input.Key
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Silk.NET.Input
  commentId: N:Silk.NET.Input
  isExternal: true
  name: Silk.NET.Input
  nameWithType: Silk.NET.Input
  fullName: Silk.NET.Input
  spec.csharp:
  - uid: Silk
    name: Silk
    isExternal: true
  - name: .
  - uid: Silk.NET
    name: NET
    isExternal: true
  - name: .
  - uid: Silk.NET.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: Silk
    name: Silk
    isExternal: true
  - name: .
  - uid: Silk.NET
    name: NET
    isExternal: true
  - name: .
  - uid: Silk.NET.Input
    name: Input
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RedLight.Input.RLKeyboard.OnKeyUp*
  commentId: Overload:RedLight.Input.RLKeyboard.OnKeyUp
  href: RedLight.Input.RLKeyboard.html#RedLight_Input_RLKeyboard_OnKeyUp_Silk_NET_Input_IKeyboard_Silk_NET_Input_Key_System_Int32_
  name: OnKeyUp
  nameWithType: RLKeyboard.OnKeyUp
  fullName: RedLight.Input.RLKeyboard.OnKeyUp
